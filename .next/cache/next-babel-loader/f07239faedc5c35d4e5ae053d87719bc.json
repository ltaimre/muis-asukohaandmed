{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n\nvar rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nvar Test = function Test(props) {\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Museaale muuseumis: \", props.count), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Museaale valikus: \", props.choice), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Museaale s\\xFCndmusega: \", props.countEvent));\n};\n\nTest.getInitialProps = function getInitialProps(context) {\n  var hasHigher, isTypeEvent, hasEvent, count, countEvent, choice, array, value, x, hasEv;\n  return _regeneratorRuntime.async(function getInitialProps$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          hasEvent = function _hasEvent(link) {\n            var dataset, _iterator3, _step3, quad, isType;\n\n            return _regeneratorRuntime.async(function hasEvent$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }).then(function (res) {\n                      return res.dataset();\n                    })[\"catch\"](function (err) {\n                      return console.error(err);\n                    }));\n\n                  case 2:\n                    dataset = _context3.sent;\n                    _iterator3 = _createForOfIteratorHelper(dataset);\n                    _context3.prev = 4;\n\n                    _iterator3.s();\n\n                  case 6:\n                    if ((_step3 = _iterator3.n()).done) {\n                      _context3.next = 16;\n                      break;\n                    }\n\n                    quad = _step3.value;\n\n                    if (!(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\")) {\n                      _context3.next = 14;\n                      break;\n                    }\n\n                    _context3.next = 11;\n                    return _regeneratorRuntime.awrap(isTypeEvent(quad.object.value));\n\n                  case 11:\n                    isType = _context3.sent;\n\n                    if (!isType) {\n                      _context3.next = 14;\n                      break;\n                    }\n\n                    return _context3.abrupt(\"return\", true);\n\n                  case 14:\n                    _context3.next = 6;\n                    break;\n\n                  case 16:\n                    _context3.next = 21;\n                    break;\n\n                  case 18:\n                    _context3.prev = 18;\n                    _context3.t0 = _context3[\"catch\"](4);\n\n                    _iterator3.e(_context3.t0);\n\n                  case 21:\n                    _context3.prev = 21;\n\n                    _iterator3.f();\n\n                    return _context3.finish(21);\n\n                  case 24:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, [[4, 18, 21, 24]], Promise);\n          };\n\n          isTypeEvent = function _isTypeEvent(link) {\n            var dataset, _iterator2, _step2, quad;\n\n            return _regeneratorRuntime.async(function isTypeEvent$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }).then(function (res) {\n                      return res.dataset();\n                    })[\"catch\"](function (err) {\n                      return console.error(err);\n                    }));\n\n                  case 2:\n                    dataset = _context2.sent;\n                    _iterator2 = _createForOfIteratorHelper(dataset);\n                    _context2.prev = 4;\n\n                    _iterator2.s();\n\n                  case 6:\n                    if ((_step2 = _iterator2.n()).done) {\n                      _context2.next = 12;\n                      break;\n                    }\n\n                    quad = _step2.value;\n\n                    if (!(quad.object.value == \"http://opendata.muis.ee/thesaurus/61/11273\")) {\n                      _context2.next = 10;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", true);\n\n                  case 10:\n                    _context2.next = 6;\n                    break;\n\n                  case 12:\n                    _context2.next = 17;\n                    break;\n\n                  case 14:\n                    _context2.prev = 14;\n                    _context2.t0 = _context2[\"catch\"](4);\n\n                    _iterator2.e(_context2.t0);\n\n                  case 17:\n                    _context2.prev = 17;\n\n                    _iterator2.f();\n\n                    return _context2.finish(17);\n\n                  case 20:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[4, 14, 17, 20]], Promise);\n          };\n\n          hasHigher = function _hasHigher(link) {\n            var res, dataset, _iterator, _step, quad;\n\n            return _regeneratorRuntime.async(function hasHigher$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context.sent;\n                    _context.next = 5;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 5:\n                    dataset = _context.sent;\n                    //\n                    _iterator = _createForOfIteratorHelper(dataset);\n\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        quad = _step.value;\n\n                        if (quad.object.value == \"http://www.cidoc-crm.org/cidoc-crm/P127_has_broader_term\") {\n                          console.log(\"subjekt: \".concat(quad.subject.value, \", predikaat: \").concat(quad.predicate.value, \" objekt: \").concat(quad.object.value));\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          count = 0;\n          countEvent = 0;\n          choice = 50;\n          array = [];\n          _context4.next = 9;\n          return _regeneratorRuntime.awrap(rdfetch('http://www.muis.ee/rdf/objects-by-museum/34191').then(function (res) {\n            return res.dataset();\n          }).then(function (dataset) {\n            var _iterator4 = _createForOfIteratorHelper(dataset),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var quad = _step4.value;\n\n                if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") {\n                  array.push(quad.object.value);\n                  count++;\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          })[\"catch\"](function (err) {\n            return console.error(err);\n          }));\n\n        case 9:\n          value = _context4.sent;\n          x = 0;\n\n        case 11:\n          if (!(x < choice)) {\n            _context4.next = 19;\n            break;\n          }\n\n          _context4.next = 14;\n          return _regeneratorRuntime.awrap(hasEvent(array[x]));\n\n        case 14:\n          hasEv = _context4.sent;\n\n          if (hasEv) {\n            countEvent++;\n          }\n\n        case 16:\n          x++;\n          _context4.next = 11;\n          break;\n\n        case 19:\n          return _context4.abrupt(\"return\", {\n            count: count,\n            choice: choice,\n            countEvent: countEvent\n          });\n\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","dynamic","rdfetch","require","Test","props","count","choice","countEvent","getInitialProps","context","hasHigher","isTypeEvent","hasEvent","link","headers","accept","then","res","dataset","err","console","error","quad","predicate","value","object","isType","log","subject","array","push","x","hasEv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic'\nconst rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nconst Test= props => (\n\n    <React.Fragment>\n        <p>Museaale muuseumis: {props.count}</p>\n        <p>Museaale valikus: {props.choice}</p>\n        <p>Museaale sündmusega: {props.countEvent}</p>\n\n    </React.Fragment>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       async function hasHigher(link) {\n           const res = await rdfetch(`${link}`, {\n               headers: {\n                   accept: 'application/rdf+xml'\n               }\n           });\n           const dataset = await res.dataset();\n                //\n           for (const quad of dataset) {\n               if(quad.object.value == \"http://www.cidoc-crm.org/cidoc-crm/P127_has_broader_term\" ) {\n                   console.log(`subjekt: ${quad.subject.value}, predikaat: ${quad.predicate.value} objekt: ${quad.object.value}`)\n               }\n\n\n       }\n       }\n\n\n       async function isTypeEvent(link) {\n           const dataset = await rdfetch(`${link}`, {\n               headers: {\n                   accept: 'application/rdf+xml'\n               }\n           })\n               .then(res => res.dataset())\n               .catch(err => console.error(err));\n\n           for (const quad of dataset) {\n               if(quad.object.value == \"http://opendata.muis.ee/thesaurus/61/11273\" ) {\n                               return true;\n                           }\n                        /*   else{\n                               hasHigher(quad.object.value);\n                           }*/\n\n                       }\n\n\n       }\n\n       async function hasEvent(link) {\n          const dataset = await rdfetch(`${link}`, {\n              headers: {\n                  accept: 'application/rdf+xml'\n              }\n          })\n               .then(res => res.dataset())\n               .catch(err => console.error(err));\n           for (const quad of dataset) {\n               if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" ) {\n                   { let isType = await isTypeEvent(quad.object.value);\n                       if(isType) {\n                           return true;\n                       }\n\n                   }\n\n\n               }\n           }\n       }\n\n\n\n\n       let count = 0;\n       let countEvent = 0;\n       const choice = 50;\n       const array = [];\n\n        const value = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/34191')\n           .then(res => res.dataset())\n           .then(dataset => {\n               for (const quad of dataset) {\n                   if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n                   { array.push(quad.object.value);\n                       count ++\n                   }\n               }\n           })\n           .catch(err => console.error(err));\n\n\n      for (let x = 0; x<choice; x++) {\n           { let hasEv = await hasEvent(array[x]);\n               if(hasEv) {\n                   countEvent++\n               }\n\n           }\n\n\n       }\n\n\n\n\n       return {count, choice, countEvent};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}