{"ast":null,"code":"var _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/components/Map.js\";\nvar __jsx = React.createElement;\nimport L from 'leaflet';\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nconst elId = 'map';\nconst style = {\n  default: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  hover: {\n    color: '#0055B8',\n    weight: 4,\n    opacity: .6,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  selected: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: '#0055B8',\n    fillOpacity: 1\n  }\n};\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    const mapData = await fetch(`/data/maakonnad.geojson`).then(response => response.json());\n    console.log(mapData);\n    const map = L.map(elId, {\n      attributionControl: false,\n      zoomControl: false,\n      zoomSnap: 0\n    });\n    const maakondLayer = L.geoJSON(mapData, {\n      style: function (feature) {\n        switch (feature.properties.MNIMI) {\n          case 'Saare maakond':\n            return style.selected;\n\n          default:\n            return style.default;\n        }\n      }\n    }).addTo(map);\n    map.fitBounds(maakondLayer.getBounds(), {\n      padding: [0, 0]\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"map\",\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/components/Map.js"],"names":["L","fetch","React","Component","elId","style","default","color","weight","opacity","fillColor","fillOpacity","hover","selected","Map","constructor","props","componentDidMount","mapData","then","response","json","console","log","map","attributionControl","zoomControl","zoomSnap","maakondLayer","geoJSON","feature","properties","MNIMI","addTo","fitBounds","getBounds","padding","render"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,IAAI,GAAG,KAAb;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,MAAM,EAAE,CAFH;AAGLC,IAAAA,OAAO,EAAE,CAHJ;AAILC,IAAAA,SAAS,EAAE,KAJN;AAKLC,IAAAA,WAAW,EAAE;AALR,GADC;AAQVC,EAAAA,KAAK,EAAE;AACHL,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,MAAM,EAAE,CAFL;AAGHC,IAAAA,OAAO,EAAE,EAHN;AAIHC,IAAAA,SAAS,EAAE,KAJR;AAKHC,IAAAA,WAAW,EAAE;AALV,GARG;AAeVE,EAAAA,QAAQ,EAAE;AACNN,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,OAAO,EAAE,CAHH;AAINC,IAAAA,SAAS,EAAE,SAJL;AAKNC,IAAAA,WAAW,EAAE;AALP;AAfA,CAAd;;AAwBA,MAAMG,GAAN,SAAkBX,SAAlB,CAA4B;AACxBY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAED,QAAMC,iBAAN,GAA0B;AAEtB,UAAMC,OAAO,GAAG,MAAMjB,KAAK,CAAE,yBAAF,CAAL,CAAiCkB,IAAjC,CAAsCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAlD,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,UAAMM,GAAG,GAAGxB,CAAC,CAACwB,GAAF,CAAMpB,IAAN,EAAY;AACpBqB,MAAAA,kBAAkB,EAAE,KADA;AAEpBC,MAAAA,WAAW,EAAE,KAFO;AAGpBC,MAAAA,QAAQ,EAAE;AAHU,KAAZ,CAAZ;AAOA,UAAMC,YAAY,GAAC5B,CAAC,CAAC6B,OAAF,CAAUX,OAAV,EAAmB;AAClCb,MAAAA,KAAK,EAAE,UAASyB,OAAT,EAAkB;AACrB,gBAAQA,OAAO,CAACC,UAAR,CAAmBC,KAA3B;AACI,eAAK,eAAL;AAAsB,mBAAO3B,KAAK,CAACQ,QAAb;;AACtB;AAAS,mBAAOR,KAAK,CAACC,OAAb;AAFb;AAIH;AANiC,KAAnB,EAOZ2B,KAPY,CAONT,GAPM,CAAnB;AAQAA,IAAAA,GAAG,CAACU,SAAJ,CAAcN,YAAY,CAACO,SAAb,EAAd,EAAyC;AAACC,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAV,KAAzC;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,SAAS,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH;;AAjCuB;;AAsC5B,eAAevB,GAAf","sourcesContent":["import L from 'leaflet'\nimport fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react'\n\nconst elId = 'map'\n\nconst style = {\n    default: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    hover: {\n        color: '#0055B8',\n        weight: 4,\n        opacity: .6,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    selected: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: '#0055B8',\n        fillOpacity: 1\n    }\n}\n\nclass Map extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n\n    async componentDidMount() {\n\n        const mapData = await fetch(`/data/maakonnad.geojson`).then(response => response.json());\n        console.log(mapData);\n        const map = L.map(elId, {\n            attributionControl: false,\n            zoomControl: false,\n            zoomSnap: 0\n        });\n\n\n        const maakondLayer=L.geoJSON(mapData, {\n            style: function(feature) {\n                switch (feature.properties.MNIMI) {\n                    case 'Saare maakond': return style.selected;\n                    default: return style.default;\n                }\n            }\n            }).addTo(map);\n        map.fitBounds(maakondLayer.getBounds(),  {padding: [0, 0]});\n\n\n    }\n\n    render() {\n        return <div id=\"map\" className=\"map\">\n        </div>\n    }\n\n\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}