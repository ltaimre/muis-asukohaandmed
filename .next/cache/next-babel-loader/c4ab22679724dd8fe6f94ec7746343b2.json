{"ast":null,"code":"var _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/components/KihMap.js\";\nvar __jsx = React.createElement;\nimport L from 'leaflet';\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nconst elId = 'map';\nconst style = {\n  default: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  hover: {\n    color: '#0055B8',\n    weight: 4,\n    opacity: .6,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  selected: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: '#0055B8',\n    fillOpacity: 1\n  }\n};\n\nclass KihMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      map: null,\n      labelFeatures: false,\n      labels: new L.FeatureGroup(),\n      layer: null,\n      cache: {},\n      clickHandler: {\n        region1922: feature => {\n          this.createLayer('kih1922', {\n            filters: [{\n              'PIIRKOND': feature.properties.PIIRKOND\n            }],\n            labels: true\n          });\n        },\n        kih1922: feature => {\n          if (feature.properties.id) {\n            window.location.href = `./${feature.properties.id}`;\n          }\n        }\n      },\n      labelProperty: {\n        region1922: 'PIIRKOND',\n        kih1922: 'KIHELKOND'\n      },\n      labelClass: {\n        region1922: 'label big-label',\n        kih1922: 'label small-label'\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.state.map = this.createMap(elId);\n    this.state.layer = L.geoJSON([], {\n      style: style.default,\n      onEachFeature: (feature, featureLayer) => {\n        if (this.state.id in this.state.clickHandler && this.props.clickable) {\n          featureLayer.on('click', e => {\n            this.state.clickHandler[this.state.id](feature);\n          });\n        }\n\n        if (feature._selected) {\n          featureLayer.setStyle(style.selected);\n        }\n\n        if (this.state.labelFeatures) {\n          const point = feature.properties.CENTROID || featureLayer.getBounds().getCenter();\n          const label = L.marker(point, {\n            interactive: false,\n            icon: L.divIcon({\n              className: this.state.labelClass[this.state.id],\n              html: `<label>${feature.properties[this.state.labelProperty[this.state.id]]}</label>`,\n              iconSize: [160, 0],\n              iconAnchor: [80, 0]\n            })\n          }).addTo(this.state.labels);\n        }\n\n        featureLayer.on('mouseover', e => {\n          if (this.props.hover && !feature._selected) {\n            featureLayer.setStyle(style.hover);\n            featureLayer.bringToFront();\n          }\n        }).on('mouseout', e => {\n          if (this.props.hover && !feature._selected) {\n            featureLayer.setStyle(style.default);\n          }\n        });\n      }\n    });\n    this.state.layer.addTo(this.state.map);\n    this.state.labels.addTo(this.state.map);\n\n    if (this.props.layer) {\n      this.createLayer(this.props.layer, this.props);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"map\",\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }\n    }, __jsx(\"button\", {\n      className: \"back\",\n      onClick: this.handleBackClick.bind(this),\n      style: {\n        display: this.state.id === 'kih1922' && this.props.clickable ? 'block' : 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, \"Tagasi\"));\n  }\n\n  handleBackClick() {\n    this.createLayer('kih1922', {\n      labels: true\n    });\n  }\n\n  createMap(elId) {\n    const map = L.map(elId, {\n      attributionControl: false,\n      zoomControl: false,\n      zoomSnap: 0\n    }); // disable drag and zoom handlers\n\n    map.dragging.disable();\n    map.touchZoom.disable();\n    map.doubleClickZoom.disable();\n    map.scrollWheelZoom.disable();\n    return map;\n  }\n\n  load(id) {\n    return new Promise((resolve, reject) => {\n      if (id in this.state.cache) {\n        resolve(this.state.cache[id]);\n      } else {\n        fetch(`/data/${id}.geojson`).then(response => response.json()).then(response => {\n          this.state.cache[id] = response;\n          resolve(response);\n        }).catch(reject);\n      }\n    });\n  }\n\n  createLayer(id, options) {\n    this.setState({\n      id: id,\n      labelFeatures: options.labels\n    });\n    this.state.layer.clearLayers();\n    this.state.labels.clearLayers();\n    this.load(id).then(response => {\n      const data = Object.assign({}, response);\n\n      if ('filters' in options && options.filters.length) {\n        data.features = data.features.filter(feature => {\n          const valid = [];\n          options.filters.forEach(item => {\n            Object.keys(item).forEach(key => {\n              if (key in feature.properties) {\n                valid.push(feature.properties[key] === item[key]);\n              }\n            });\n          });\n          return valid.indexOf(true) > -1;\n        });\n      }\n\n      if ('selected' in options && options.selected.length) {\n        data.features = data.features.map(feature => {\n          const valid = [];\n          options.selected.forEach(item => {\n            Object.keys(item).forEach(key => {\n              if (key in feature.properties) {\n                valid.push(feature.properties[key] === item[key]);\n              }\n            });\n          });\n\n          if (valid.indexOf(true) > -1) {\n            feature._selected = true;\n          }\n\n          return feature;\n        });\n      }\n\n      this.state.layer.addData(data);\n      this.state.map.fitBounds(this.state.layer.getBounds(), {\n        padding: [0, 0]\n      });\n    });\n  }\n\n}\n\nexport default KihMap;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/components/KihMap.js"],"names":["L","fetch","React","Component","elId","style","default","color","weight","opacity","fillColor","fillOpacity","hover","selected","KihMap","constructor","props","state","id","map","labelFeatures","labels","FeatureGroup","layer","cache","clickHandler","region1922","feature","createLayer","filters","properties","PIIRKOND","kih1922","window","location","href","labelProperty","labelClass","componentDidMount","createMap","geoJSON","onEachFeature","featureLayer","clickable","on","e","_selected","setStyle","point","CENTROID","getBounds","getCenter","label","marker","interactive","icon","divIcon","className","html","iconSize","iconAnchor","addTo","bringToFront","render","handleBackClick","bind","display","attributionControl","zoomControl","zoomSnap","dragging","disable","touchZoom","doubleClickZoom","scrollWheelZoom","load","Promise","resolve","reject","then","response","json","catch","options","setState","clearLayers","data","Object","assign","length","features","filter","valid","forEach","item","keys","key","push","indexOf","addData","fitBounds","padding"],"mappings":"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","sourcesContent":["import L from 'leaflet'\nimport fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react'\n\nconst elId = 'map'\n\nconst style = {\n  default: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  hover: {\n    color: '#0055B8',\n    weight: 4,\n    opacity: .6,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  selected: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: '#0055B8',\n    fillOpacity: 1\n  }\n}\n\nclass KihMap extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: null,\n      map: null,\n      labelFeatures: false,\n      labels: new L.FeatureGroup(),\n      layer: null,\n      cache: {},\n      clickHandler: {\n        region1922: feature => {\n          this.createLayer('kih1922', {\n            filters: [{'PIIRKOND': feature.properties.PIIRKOND}],\n            labels: true\n          })\n        },\n        kih1922: feature => {\n          if (feature.properties.id) {\n            window.location.href = `./${feature.properties.id}`\n          }\n        }\n      },\n      labelProperty: {\n        region1922: 'PIIRKOND',\n        kih1922: 'KIHELKOND'\n      },\n      labelClass: {\n        region1922: 'label big-label',\n        kih1922: 'label small-label'\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.state.map = this.createMap(elId)\n    this.state.layer = L.geoJSON([], {\n      style: style.default,\n      onEachFeature: (feature, featureLayer) => {\n        if (this.state.id in this.state.clickHandler && this.props.clickable) {\n          featureLayer.on('click', e => {\n            this.state.clickHandler[this.state.id](feature)\n          })\n        }\n        if (feature._selected) {\n          featureLayer.setStyle(style.selected)\n        }\n        if (this.state.labelFeatures) {\n          const point = feature.properties.CENTROID || featureLayer.getBounds().getCenter()\n          const label = L.marker(point, {\n            interactive: false,\n            icon: L.divIcon({\n              className: this.state.labelClass[this.state.id],\n              html: `<label>${feature.properties[this.state.labelProperty[this.state.id]]}</label>`,\n              iconSize: [160, 0],\n              iconAnchor: [80, 0]\n            })\n          }).addTo(this.state.labels)\n        }\n        featureLayer.on('mouseover', e => {\n          if (this.props.hover && !feature._selected) {\n            featureLayer.setStyle(style.hover)\n            featureLayer.bringToFront()\n          }\n        }).on('mouseout', e => {\n          if (this.props.hover && !feature._selected) {\n            featureLayer.setStyle(style.default)\n          }\n        })\n      }\n    })\n    this.state.layer.addTo(this.state.map)\n    this.state.labels.addTo(this.state.map)\n    if (this.props.layer) {\n      this.createLayer(this.props.layer, this.props)\n    }\n  }\n\n  render() {\n    return <div id=\"map\" className=\"map\">\n      <button\n        className=\"back\"\n        onClick={this.handleBackClick.bind(this)}\n        style={{display: this.state.id === 'kih1922' && this.props.clickable ? 'block' : 'none'}}>\n        Tagasi\n      </button>\n    </div>\n  }\n\n  handleBackClick() {\n    this.createLayer('kih1922', {\n      labels: true\n    })\n  }\n\n  createMap(elId) {\n    const map = L.map(elId, {\n      attributionControl: false,\n      zoomControl: false,\n      zoomSnap: 0\n    })\n    // disable drag and zoom handlers\n    map.dragging.disable()\n    map.touchZoom.disable()\n    map.doubleClickZoom.disable()\n    map.scrollWheelZoom.disable()\n    return map\n  }\n\n  load(id) {\n    return new Promise((resolve, reject) => {\n      if (id in this.state.cache) {\n        resolve(this.state.cache[id])\n      } else {\n        fetch(`/data/${id}.geojson`)\n          .then(response => response.json())\n          .then(response => {\n            this.state.cache[id] = response\n            resolve(response)\n          })\n          .catch(reject)\n      }\n    })\n  }\n\n  createLayer(id, options) {\n    this.setState({\n      id: id,\n      labelFeatures: options.labels\n    })\n    this.state.layer.clearLayers()\n    this.state.labels.clearLayers()\n    this.load(id)\n      .then(response => {\n        const data = Object.assign({}, response)\n        if ('filters' in options && options.filters.length) {\n          data.features = data.features.filter(feature => {\n            const valid = []\n            options.filters.forEach(item => {\n              Object.keys(item).forEach(key => {\n                if (key in feature.properties) {\n                  valid.push(feature.properties[key] === item[key])\n                }\n              })\n            })\n            return valid.indexOf(true) > -1\n          })\n        }\n        if ('selected' in options && options.selected.length) {\n          data.features = data.features.map(feature => {\n            const valid = []\n            options.selected.forEach(item => {\n              Object.keys(item).forEach(key => {\n                if (key in feature.properties) {\n                  valid.push(feature.properties[key] === item[key])\n                }\n              })\n            })\n            if (valid.indexOf(true) > -1) {\n              feature._selected = true\n            }\n            return feature\n          })\n        }\n        this.state.layer.addData(data)\n        this.state.map.fitBounds(this.state.layer.getBounds(), {padding: [0, 0]})\n      })\n  }\n\n}\n\nexport default KihMap\n"]},"metadata":{},"sourceType":"module"}