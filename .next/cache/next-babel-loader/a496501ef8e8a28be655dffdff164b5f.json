{"ast":null,"code":"var _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n\nconst rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nconst Test = props => __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, \"Museaale muuseumis: \", props.count), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, \"Museaale s\\xFCndmusega: \", props.countEvent));\n\nTest.getInitialProps = async function getInitialProps(context) {\n  async function ev2(link) {\n    const res = await rdfetch(`${link}`, {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    });\n    const dataset = await res.dataset();\n\n    for (const quad of dataset) {\n      if (quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\") return true;\n    }\n\n    return false;\n  }\n\n  async function hasEvent(link) {\n    const res = await rdfetch(`${link}`, {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    });\n    const dataset = await res.dataset();\n\n    for (const quad of dataset) {\n      if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\") {\n        return true;\n      } //return false;\n\n    }\n  }\n\n  const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n    headers: {\n      accept: 'application/rdf+xml'\n    }\n  });\n  const dataset = await res.dataset();\n  let count = 0;\n  let countEvent = 0;\n  const array = [];\n\n  for (const quad of dataset) {\n    if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") array.push(quad.object.value);\n    count++;\n  }\n\n  for (let x = 0; x < 100; x++) {\n    {\n      let hasEv = await hasEvent(array[x]);\n\n      if (hasEv) {\n        countEvent++;\n      }\n    } // array.push(quad.object.value);\n    //var a = getEvent(quad.object.value);\n    // console.log(a);\n  }\n\n  return {\n    count,\n    countEvent\n  };\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","dynamic","rdfetch","require","Test","props","count","countEvent","getInitialProps","context","ev2","link","res","headers","accept","dataset","quad","predicate","object","hasEvent","value","array","push","x","hasEv"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;AACA;;;;;;AAMA,MAAMC,IAAI,GAAEC,KAAK,IAEb,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwBA,KAAK,CAACC,KAA9B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyBD,KAAK,CAACE,UAA/B,CAFJ,CAFJ;;AAUGH,IAAI,CAACI,eAAL,GAAuB,eAAeA,eAAf,CAAgCC,OAAhC,EAAyC;AAE5D,iBAAeC,GAAf,CAAmBC,IAAnB,EAAyB;AACjB,UAAMC,GAAG,GAAG,MAAMV,OAAO,CAAE,GAAES,IAAK,EAAT,EAAY;AACjCE,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AADwB,KAAZ,CAAzB;AAKH,UAAMC,OAAO,GAAG,MAAMH,GAAG,CAACG,OAAJ,EAAtB;;AACA,SAAK,MAAMC,IAAX,IAAmBD,OAAnB,EAA4B;AACrB,UAAGC,IAAI,CAACC,SAAL,CAAeC,MAAf,IAAyB,4CAA5B,EACI,OAAO,IAAP;AACX;;AACA,WAAO,KAAP;AACJ;;AAED,iBAAeC,QAAf,CAAwBR,IAAxB,EAA8B;AACtB,UAAMC,GAAG,GAAG,MAAMV,OAAO,CAAE,GAAES,IAAK,EAAT,EAAY;AACjCE,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AADwB,KAAZ,CAAzB;AAKA,UAAMC,OAAO,GAAG,MAAMH,GAAG,CAACG,OAAJ,EAAtB;;AAEA,SAAK,MAAMC,IAAX,IAAmBD,OAAnB,EAA4B;AACxB,UAAIC,IAAI,CAACC,SAAL,CAAeG,KAAf,IAAwB,oEAA5B,EAAmG;AAC/F,eAAO,IAAP;AACH,OAHuB,CAIxB;;AACH;AACJ;;AAEL,QAAMR,GAAG,GAAG,MAAMV,OAAO,CAAC,iDAAD,EAAoD;AACxEW,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAD+D,GAApD,CAAzB;AAKA,QAAMC,OAAO,GAAG,MAAMH,GAAG,CAACG,OAAJ,EAAtB;AACA,MAAIT,KAAK,GAAG,CAAZ;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,QAAMc,KAAK,GAAG,EAAd;;AACA,OAAK,MAAML,IAAX,IAAmBD,OAAnB,EAA4B;AACvB,QAAGC,IAAI,CAACC,SAAL,CAAeG,KAAf,IAAwB,uDAA3B,EAEIC,KAAK,CAACC,IAAN,CAAWN,IAAI,CAACE,MAAL,CAAYE,KAAvB;AACAd,IAAAA,KAAK;AAEd;;AAEA,OAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,GAAlB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB;AAAE,UAAIC,KAAK,GAAG,MAAML,QAAQ,CAACE,KAAK,CAACE,CAAD,CAAN,CAA1B;;AACE,UAAGC,KAAH,EAAU;AACNjB,QAAAA,UAAU;AACb;AAEJ,KANuB,CASxB;AACA;AACA;AAEH;;AAKD,SAAO;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAP;AACF,CApEF;;AAyEH,eAAeH,IAAf","sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic'\nconst rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nconst Test= props => (\n\n    <React.Fragment>\n        <p>Museaale muuseumis: {props.count}</p>\n        <p>Museaale s√ºndmusega: {props.countEvent}</p>\n    </React.Fragment>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       async function ev2(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               })\n            const dataset = await res.dataset();\n            for (const quad of dataset) {\n                   if(quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\" )\n                       return true;\n           }\n            return false;\n       }\n\n       async function hasEvent(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               });\n               const dataset = await res.dataset();\n\n               for (const quad of dataset) {\n                   if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" ) {\n                       return true;\n                   }\n                   //return false;\n               }\n           }\n\n       const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n                accept: 'application/rdf+xml'\n            }\n        });\n       const dataset = await res.dataset();\n       let count = 0;\n       let countEvent = 0;\n       const array = [];\n       for (const quad of dataset) {\n            if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n\n                array.push(quad.object.value);\n                count ++\n\n      }\n\n       for (let x = 0; x<100; x++) {\n           { let hasEv = await hasEvent(array[x]);\n               if(hasEv) {\n                   countEvent++\n               }\n\n           }\n\n\n           // array.push(quad.object.value);\n           //var a = getEvent(quad.object.value);\n           // console.log(a);\n\n       }\n\n\n\n\n       return {count, countEvent};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}