{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n\nvar rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nvar Test = function Test(props) {\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Museaale muuseumis: \", props.count), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Museaale s\\xFCndmusega: \", props.countEvent));\n};\n\nTest.getInitialProps = function getInitialProps(context) {\n  var ev2, hasEvent, res, dataset, count, countEvent, array, _iterator3, _step3, quad, x, hasEv;\n\n  return _regeneratorRuntime.async(function getInitialProps$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          hasEvent = function _hasEvent(link) {\n            var res, dataset, _iterator2, _step2, quad;\n\n            return _regeneratorRuntime.async(function hasEvent$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context2.sent;\n                    _context2.next = 5;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 5:\n                    dataset = _context2.sent;\n                    _iterator2 = _createForOfIteratorHelper(dataset);\n                    _context2.prev = 7;\n\n                    _iterator2.s();\n\n                  case 9:\n                    if ((_step2 = _iterator2.n()).done) {\n                      _context2.next = 15;\n                      break;\n                    }\n\n                    quad = _step2.value;\n\n                    if (!(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\")) {\n                      _context2.next = 13;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", true);\n\n                  case 13:\n                    _context2.next = 9;\n                    break;\n\n                  case 15:\n                    _context2.next = 20;\n                    break;\n\n                  case 17:\n                    _context2.prev = 17;\n                    _context2.t0 = _context2[\"catch\"](7);\n\n                    _iterator2.e(_context2.t0);\n\n                  case 20:\n                    _context2.prev = 20;\n\n                    _iterator2.f();\n\n                    return _context2.finish(20);\n\n                  case 23:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[7, 17, 20, 23]], Promise);\n          };\n\n          ev2 = function _ev(link) {\n            var res, dataset, _iterator, _step, quad;\n\n            return _regeneratorRuntime.async(function ev2$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context.sent;\n                    _context.next = 5;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 5:\n                    dataset = _context.sent;\n                    _iterator = _createForOfIteratorHelper(dataset);\n                    _context.prev = 7;\n\n                    _iterator.s();\n\n                  case 9:\n                    if ((_step = _iterator.n()).done) {\n                      _context.next = 15;\n                      break;\n                    }\n\n                    quad = _step.value;\n\n                    if (!(quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\")) {\n                      _context.next = 13;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", true);\n\n                  case 13:\n                    _context.next = 9;\n                    break;\n\n                  case 15:\n                    _context.next = 20;\n                    break;\n\n                  case 17:\n                    _context.prev = 17;\n                    _context.t0 = _context[\"catch\"](7);\n\n                    _iterator.e(_context.t0);\n\n                  case 20:\n                    _context.prev = 20;\n\n                    _iterator.f();\n\n                    return _context.finish(20);\n\n                  case 23:\n                    return _context.abrupt(\"return\", false);\n\n                  case 24:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[7, 17, 20, 23]], Promise);\n          };\n\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n              accept: 'application/rdf+xml'\n            }\n          }));\n\n        case 4:\n          res = _context3.sent;\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(res.dataset());\n\n        case 7:\n          dataset = _context3.sent;\n          count = 0;\n          countEvent = 0;\n          array = [];\n          _iterator3 = _createForOfIteratorHelper(dataset);\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              quad = _step3.value;\n              if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") array.push(quad.object.value);\n              count++;\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          x = 0;\n\n        case 14:\n          if (!(x < array.length)) {\n            _context3.next = 22;\n            break;\n          }\n\n          _context3.next = 17;\n          return _regeneratorRuntime.awrap(hasEvent(array[x]));\n\n        case 17:\n          hasEv = _context3.sent;\n\n          if (hasEv) {\n            countEvent++;\n          }\n\n        case 19:\n          x++;\n          _context3.next = 14;\n          break;\n\n        case 22:\n          return _context3.abrupt(\"return\", {\n            count: count,\n            countEvent: countEvent\n          });\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","dynamic","rdfetch","require","Test","props","count","countEvent","getInitialProps","context","ev2","hasEvent","link","headers","accept","res","dataset","quad","predicate","value","object","array","push","x","length","hasEv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic'\nconst rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nconst Test= props => (\n\n    <React.Fragment>\n        <p>Museaale muuseumis: {props.count}</p>\n        <p>Museaale sündmusega: {props.countEvent}</p>\n    </React.Fragment>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       async function ev2(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               })\n            const dataset = await res.dataset();\n            for (const quad of dataset) {\n                   if(quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\" )\n                       return true;\n           }\n            return false;\n       }\n\n       async function hasEvent(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               });\n               const dataset = await res.dataset();\n\n               for (const quad of dataset) {\n                   if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" ) {\n                       return true;\n                   }\n                   //return false;\n               }\n           }\n\n       const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n                accept: 'application/rdf+xml'\n            }\n        });\n       const dataset = await res.dataset();\n       let count = 0;\n       let countEvent = 0;\n       const array = [];\n       for (const quad of dataset) {\n            if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n\n                array.push(quad.object.value);\n                count ++\n\n      }\n\n       for (let x = 0; x<array.length; x++) {\n           { let hasEv = await hasEvent(array[x]);\n               if(hasEv) {\n                   countEvent++\n               }\n\n           }\n\n\n           // array.push(quad.object.value);\n           //var a = getEvent(quad.object.value);\n           // console.log(a);\n\n       }\n\n\n\n\n       return {count, countEvent};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}