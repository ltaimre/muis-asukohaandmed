{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar fetch = require('@rdfjs/fetch');\n\nvar Test = function Test(props) {\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 1\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, \"Proov\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.count), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, props.a));\n};\n\nTest.getInitialProps = function _callee(context) {\n  var label, count, list;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          label = 'http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of';\n          count = 0;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n              accept: 'application/rdf+xml'\n            }\n          }).then(function (res) {\n            return res.dataset();\n          }).then(function (dataset) {\n            console.log(typeof dataset);\n            var a = typeof dataset; //dataset.filter(item => item.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\" );\n          })[\"catch\"](function (err) {\n            return console.error(err);\n          }));\n\n        case 4:\n          list = _context.sent;\n          return _context.abrupt(\"return\", {\n            count: count,\n            a: a\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}; //inital props\n\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","fetch","require","Test","props","count","a","getInitialProps","context","label","headers","accept","then","res","dataset","console","log","err","error","list"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAClB,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACC,KAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,CAAV,CAHJ,CADkB;AAAA,CAAlB;;AAWAH,IAAI,CAACI,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAGbC,UAAAA,KAHa,GAGL,uDAHK;AAIfJ,UAAAA,KAJe,GAIP,CAJO;AAAA;AAAA,2CAKAJ,KAAK,CAAC,iDAAD,EAAoD;AACxES,YAAAA,OAAO,EAAE;AACLC,cAAAA,MAAM,EAAE;AADH;AAD+D,WAApD,CAAL,CAIhBC,IAJgB,CAIX,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,OAAJ,EAAJ;AAAA,WAJQ,EAKdF,IALc,CAKT,UAAAE,OAAO,EAAI;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,OAAnB;AACA,gBAAMR,CAAC,GAAG,OAAOQ,OAAjB,CAFa,CAGb;AACH,WATc,WAUR,UAAAG,GAAG;AAAA,mBAAIF,OAAO,CAACG,KAAR,CAAcD,GAAd,CAAJ;AAAA,WAVK,CALA;;AAAA;AAKbE,UAAAA,IALa;AAAA,2CAmBZ;AAACd,YAAAA,KAAK,EAALA,KAAD;AAAQC,YAAAA,CAAC,EAADA;AAAR,WAnBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAoBG;;;AACH,eAAeH,IAAf","sourcesContent":["\nimport React from 'react';\nconst fetch = require('@rdfjs/fetch');\nconst Test = props => (\n<React.Fragment>\n    <p>Proov</p>\n    <p>{props.count}</p>\n    <p>{props.a}</p>\n\n</React.Fragment>\n\n\n);\n\nTest.getInitialProps = async function (context) {\n\n\n    const label = 'http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of'\n    let count = 0;\n    const list = await fetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n        headers: {\n            accept: 'application/rdf+xml'\n        }\n    }).then(res => res.dataset())\n        .then(dataset => {\n            console.log(typeof dataset);\n            const a = typeof dataset;\n            //dataset.filter(item => item.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\" );\n        })\n        .catch(err => console.error(err));\n\n\n\n    return {count, a};\n}; //inital props\nexport default Test\n"]},"metadata":{},"sourceType":"module"}