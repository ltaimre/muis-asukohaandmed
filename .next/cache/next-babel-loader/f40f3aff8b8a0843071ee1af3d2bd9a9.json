{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar rdfetch = require('@rdfjs/fetch');\n\nvar Test = function Test(props) {\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, \"Proov\");\n};\n\nTest.getInitialProps = function _callee(context) {\n  var a;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          a = [\"sinisilm\"];\n          /*   async function main () {\n                 try {\n                     const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n                         headers: {\n                             accept: 'application/rdf+xml'\n                         }\n                     })\n                      const dataset = await res.dataset();\n                      for (const quad of dataset) {\n                         if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n                         //console.log(\"subjekt: \" + quad.subject.value + ' predikaat: ' + quad.predicate.value + ' objekt: ' + quad.object.value)\n                             console.log(' objekt: ' + quad.object.value);\n                     }\n                 } catch (err) {\n                     console.error(err)\n                 }\n             }\n          \n              main();*/\n\n          return _context.abrupt(\"return\", {\n            a: a\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","rdfetch","require","Test","props","getInitialProps","context","a"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADc;AAAA,CAAlB;;AAIAD,IAAI,CAACE,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,CADa,GACT,CAAC,UAAD,CADS;AAEtB;;;;;;;;;;;;;;;;;;;;AAFsB,2CA0BZ;AAACA,YAAAA,CAAC,EAADA;AAAD,WA1BY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AA4BA,eAAeJ,IAAf","sourcesContent":["\nimport React from 'react';\nconst rdfetch = require('@rdfjs/fetch');\nconst Test = props => (\n    <p>Proov</p>\n);\n\nTest.getInitialProps = async function (context) {\n    const a = [\"sinisilm\"];\n /*   async function main () {\n        try {\n            const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n                headers: {\n                    accept: 'application/rdf+xml'\n                }\n            })\n\n            const dataset = await res.dataset();\n\n            for (const quad of dataset) {\n                if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n                //console.log(\"subjekt: \" + quad.subject.value + ' predikaat: ' + quad.predicate.value + ' objekt: ' + quad.object.value)\n                    console.log(' objekt: ' + quad.object.value);\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n\n\n    main();*/\n\n    return {a};\n};\nexport default Test\n"]},"metadata":{},"sourceType":"module"}