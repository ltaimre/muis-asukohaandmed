{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n\nvar rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nvar Test = function Test(props) {\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Museaale muuseumis: \", props.count), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Museaale valikus: \", props.choice), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Museaale s\\xFCndmusega: \", props.countEvent));\n};\n\nTest.getInitialProps = function getInitialProps(context) {\n  var hasHigher, isTypeEvent, hasEvent, res, dataset, count, countEvent, choice, array, _iterator4, _step4, quad, x, hasEv;\n\n  return _regeneratorRuntime.async(function getInitialProps$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          hasEvent = function _hasEvent(link) {\n            var res, dataset, _iterator3, _step3, quad, isType;\n\n            return _regeneratorRuntime.async(function hasEvent$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context3.sent;\n                    _context3.next = 5;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 5:\n                    dataset = _context3.sent;\n                    _iterator3 = _createForOfIteratorHelper(dataset);\n                    _context3.prev = 7;\n\n                    _iterator3.s();\n\n                  case 9:\n                    if ((_step3 = _iterator3.n()).done) {\n                      _context3.next = 19;\n                      break;\n                    }\n\n                    quad = _step3.value;\n\n                    if (!(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\")) {\n                      _context3.next = 17;\n                      break;\n                    }\n\n                    _context3.next = 14;\n                    return _regeneratorRuntime.awrap(isTypeEvent(quad.object.value));\n\n                  case 14:\n                    isType = _context3.sent;\n\n                    if (!isType) {\n                      _context3.next = 17;\n                      break;\n                    }\n\n                    return _context3.abrupt(\"return\", true);\n\n                  case 17:\n                    _context3.next = 9;\n                    break;\n\n                  case 19:\n                    _context3.next = 24;\n                    break;\n\n                  case 21:\n                    _context3.prev = 21;\n                    _context3.t0 = _context3[\"catch\"](7);\n\n                    _iterator3.e(_context3.t0);\n\n                  case 24:\n                    _context3.prev = 24;\n\n                    _iterator3.f();\n\n                    return _context3.finish(24);\n\n                  case 27:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, [[7, 21, 24, 27]], Promise);\n          };\n\n          isTypeEvent = function _isTypeEvent(link) {\n            var res, _dataset, _iterator2, _step2, quad;\n\n            return _regeneratorRuntime.async(function isTypeEvent$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context2.sent;\n\n                    if (!res) {\n                      _context2.next = 28;\n                      break;\n                    }\n\n                    _context2.next = 6;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 6:\n                    _dataset = _context2.sent;\n\n                    if (!_dataset) {\n                      _context2.next = 28;\n                      break;\n                    }\n\n                    _iterator2 = _createForOfIteratorHelper(_dataset);\n                    _context2.prev = 9;\n\n                    _iterator2.s();\n\n                  case 11:\n                    if ((_step2 = _iterator2.n()).done) {\n                      _context2.next = 20;\n                      break;\n                    }\n\n                    quad = _step2.value;\n\n                    if (!(quad.object.value == \"http://opendata.muis.ee/thesaurus/61/11273\")) {\n                      _context2.next = 17;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", true);\n\n                  case 17:\n                    hasHigher(quad.object.value);\n\n                  case 18:\n                    _context2.next = 11;\n                    break;\n\n                  case 20:\n                    _context2.next = 25;\n                    break;\n\n                  case 22:\n                    _context2.prev = 22;\n                    _context2.t0 = _context2[\"catch\"](9);\n\n                    _iterator2.e(_context2.t0);\n\n                  case 25:\n                    _context2.prev = 25;\n\n                    _iterator2.f();\n\n                    return _context2.finish(25);\n\n                  case 28:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[9, 22, 25, 28]], Promise);\n          };\n\n          hasHigher = function _hasHigher(link) {\n            var res, dataset, _iterator, _step, quad;\n\n            return _regeneratorRuntime.async(function hasHigher$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context.sent;\n                    _context.next = 5;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 5:\n                    dataset = _context.sent;\n                    _iterator = _createForOfIteratorHelper(dataset);\n\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        quad = _step.value;\n                        console.log(\"subjekt: \".concat(quad.subject.value, \", predikaat: \").concat(quad.predicate.value, \" objekt: \").concat(quad.object.value));\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(rdfetch('http://www.muis.ee/rdf/objects-by-museum/34191', {\n            headers: {\n              accept: 'application/rdf+xml'\n            }\n          }));\n\n        case 5:\n          res = _context4.sent;\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(res.dataset());\n\n        case 8:\n          dataset = _context4.sent;\n          count = 0;\n          countEvent = 0;\n          choice = 50;\n          array = [];\n          _iterator4 = _createForOfIteratorHelper(dataset);\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              quad = _step4.value;\n\n              if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") {\n                array.push(quad.object.value);\n                count++;\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          x = 0;\n\n        case 16:\n          if (!(x < choice)) {\n            _context4.next = 24;\n            break;\n          }\n\n          _context4.next = 19;\n          return _regeneratorRuntime.awrap(hasEvent(array[x]));\n\n        case 19:\n          hasEv = _context4.sent;\n\n          if (hasEv) {\n            countEvent++;\n          }\n\n        case 21:\n          x++;\n          _context4.next = 16;\n          break;\n\n        case 24:\n          return _context4.abrupt(\"return\", {\n            count: count,\n            choice: choice,\n            countEvent: countEvent\n          });\n\n        case 25:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","dynamic","rdfetch","require","Test","props","count","choice","countEvent","getInitialProps","context","hasHigher","isTypeEvent","hasEvent","link","headers","accept","res","dataset","quad","predicate","value","object","isType","console","log","subject","array","push","x","hasEv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic'\nconst rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nconst Test= props => (\n\n    <React.Fragment>\n        <p>Museaale muuseumis: {props.count}</p>\n        <p>Museaale valikus: {props.choice}</p>\n        <p>Museaale sündmusega: {props.countEvent}</p>\n\n    </React.Fragment>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       async function hasHigher(link) {\n           const res = await rdfetch(`${link}`, {\n               headers: {\n                   accept: 'application/rdf+xml'\n               }\n           });\n           const dataset = await res.dataset();\n\n           for (const quad of dataset) {\n\n               console.log(`subjekt: ${quad.subject.value}, predikaat: ${quad.predicate.value} objekt: ${quad.object.value}`)\n       }\n       }\n\n\n       async function isTypeEvent(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               });\n               if(res){\n                   const dataset = await res.dataset();\n                   if(dataset) {\n                       for (const quad of dataset) {\n                           if(quad.object.value == \"http://opendata.muis.ee/thesaurus/61/11273\" ) {\n                               return true;\n                           }\n                           else{\n                               hasHigher(quad.object.value);\n                           }\n\n                       }\n\n                   }\n\n               }\n\n\n       }\n\n       async function hasEvent(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               });\n               const dataset = await res.dataset();\n\n               for (const quad of dataset) {\n                   if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" ) {\n                       { let isType = await isTypeEvent(quad.object.value);\n                           if(isType) {\n                               return true;\n                           }\n\n                       }\n\n\n                   }\n\n               }\n           }\n\n       const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/34191', {\n            headers: {\n                accept: 'application/rdf+xml'\n            }\n        });\n       const dataset = await res.dataset();\n       let count = 0;\n       let countEvent = 0;\n       const choice = 50;\n       const array = [];\n       for (const quad of dataset) {\n            if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n            { array.push(quad.object.value);\n                count ++\n\n            }\n\n\n      }\n\n      for (let x = 0; x<choice; x++) {\n           { let hasEv = await hasEvent(array[x]);\n               if(hasEv) {\n                   countEvent++\n               }\n\n           }\n\n\n       }\n\n\n\n\n       return {count, choice, countEvent};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}