{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/components/Map.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport L from 'leaflet';\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nvar elId = 'map';\nvar style = {\n  \"default\": {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  hover: {\n    color: '#0055B8',\n    weight: 4,\n    opacity: .6,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  selected: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: '#0055B8',\n    fillOpacity: 1\n  }\n};\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id: null,\n      map: null,\n      labelFeatures: false,\n      labels: new L.FeatureGroup(),\n      layer: null,\n      cache: {},\n      clickHandler: {\n        region1922: function region1922(feature) {\n          _this.createLayer('kih1922', {\n            filters: [{\n              'PIIRKOND': feature.properties.PIIRKOND\n            }],\n            labels: true\n          });\n        },\n        kih1922: function kih1922(feature) {\n          if (feature.properties.id) {\n            window.location.href = \"./\".concat(feature.properties.id);\n          }\n        }\n      },\n      labelProperty: {\n        region1922: 'PIIRKOND',\n        kih1922: 'KIHELKOND'\n      },\n      labelClass: {\n        region1922: 'label big-label',\n        kih1922: 'label small-label'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var mapData;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"/data/maakond.geojson\").then(function (response) {\n                return response.json();\n              }));\n\n            case 2:\n              mapData = _context.sent;\n              this.state.map = this.createMap(elId);\n              this.state.layer = L.geoJSON(mapData, {\n                style: style[\"default\"]\n              });\n              this.state.layer.addTo(this.state.map);\n              this.state.labels.addTo(this.state.map);\n\n              if (this.props.layer) {\n                this.createLayer(this.props.layer, this.props);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"map\",\n        className: \"map\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap(elId) {\n      var map = L.map(elId, {\n        attributionControl: false,\n        zoomControl: false,\n        zoomSnap: 0\n      }); // disable drag and zoom handlers\n\n      map.dragging.disable();\n      map.touchZoom.disable();\n      map.doubleClickZoom.disable();\n      map.scrollWheelZoom.disable();\n      return map;\n    }\n  }, {\n    key: \"load\",\n    value: function load(id) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (id in _this2.state.cache) {\n          resolve(_this2.state.cache[id]);\n        } else {\n          fetch(\"/data/\".concat(id, \".geojson\")).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            _this2.state.cache[id] = response;\n            resolve(response);\n          })[\"catch\"](reject);\n        }\n      });\n    }\n  }, {\n    key: \"createLayer\",\n    value: function createLayer(id, options) {\n      var _this3 = this;\n\n      this.setState({\n        id: id,\n        labelFeatures: options.labels\n      });\n      this.state.layer.clearLayers();\n      this.state.labels.clearLayers();\n      this.load(id).then(function (response) {\n        var data = Object.assign({}, response);\n\n        if ('filters' in options && options.filters.length) {\n          data.features = data.features.filter(function (feature) {\n            var valid = [];\n            options.filters.forEach(function (item) {\n              Object.keys(item).forEach(function (key) {\n                if (key in feature.properties) {\n                  valid.push(feature.properties[key] === item[key]);\n                }\n              });\n            });\n            return valid.indexOf(true) > -1;\n          });\n        }\n\n        if ('selected' in options && options.selected.length) {\n          data.features = data.features.map(function (feature) {\n            var valid = [];\n            options.selected.forEach(function (item) {\n              Object.keys(item).forEach(function (key) {\n                if (key in feature.properties) {\n                  valid.push(feature.properties[key] === item[key]);\n                }\n              });\n            });\n\n            if (valid.indexOf(true) > -1) {\n              feature._selected = true;\n            }\n\n            return feature;\n          });\n        }\n\n        _this3.state.layer.addData(data);\n\n        _this3.state.map.fitBounds(_this3.state.layer.getBounds(), {\n          padding: [0, 0]\n        });\n      });\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/components/Map.js"],"names":["L","fetch","React","Component","elId","style","color","weight","opacity","fillColor","fillOpacity","hover","selected","Map","props","state","id","map","labelFeatures","labels","FeatureGroup","layer","cache","clickHandler","region1922","feature","createLayer","filters","properties","PIIRKOND","kih1922","window","location","href","labelProperty","labelClass","then","response","json","mapData","createMap","geoJSON","addTo","attributionControl","zoomControl","zoomSnap","dragging","disable","touchZoom","doubleClickZoom","scrollWheelZoom","Promise","resolve","reject","options","setState","clearLayers","load","data","Object","assign","length","features","filter","valid","forEach","item","keys","key","push","indexOf","_selected","addData","fitBounds","getBounds","padding"],"mappings":"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","sourcesContent":["import L from 'leaflet'\nimport fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react'\n\nconst elId = 'map'\n\nconst style = {\n    default: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    hover: {\n        color: '#0055B8',\n        weight: 4,\n        opacity: .6,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    selected: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: '#0055B8',\n        fillOpacity: 1\n    }\n}\n\nclass Map extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            map: null,\n            labelFeatures: false,\n            labels: new L.FeatureGroup(),\n            layer: null,\n            cache: {},\n            clickHandler: {\n                region1922: feature => {\n                    this.createLayer('kih1922', {\n                        filters: [{'PIIRKOND': feature.properties.PIIRKOND}],\n                        labels: true\n                    })\n                },\n                kih1922: feature => {\n                    if (feature.properties.id) {\n                        window.location.href = `./${feature.properties.id}`\n                    }\n                }\n            },\n            labelProperty: {\n                region1922: 'PIIRKOND',\n                kih1922: 'KIHELKOND'\n            },\n            labelClass: {\n                region1922: 'label big-label',\n                kih1922: 'label small-label'\n            }\n        }\n    }\n\n    async componentDidMount() {\n        const mapData = await fetch(`/data/maakond.geojson`).then(response => response.json());\n\n        this.state.map = this.createMap(elId)\n        this.state.layer = L.geoJSON(mapData, {\n            style: style.default\n        })\n        this.state.layer.addTo(this.state.map)\n        this.state.labels.addTo(this.state.map)\n        if (this.props.layer) {\n            this.createLayer(this.props.layer, this.props)\n        }\n    }\n\n    render() {\n        return <div id=\"map\" className=\"map\">\n        </div>\n    }\n\n\n\n    createMap(elId) {\n        const map = L.map(elId, {\n            attributionControl: false,\n            zoomControl: false,\n            zoomSnap: 0\n        })\n        // disable drag and zoom handlers\n        map.dragging.disable()\n        map.touchZoom.disable()\n        map.doubleClickZoom.disable()\n        map.scrollWheelZoom.disable()\n        return map\n    }\n\n\n\n    load(id) {\n        return new Promise((resolve, reject) => {\n            if (id in this.state.cache) {\n                resolve(this.state.cache[id])\n            } else {\n                fetch(`/data/${id}.geojson`)\n                    .then(response => response.json())\n                    .then(response => {\n                        this.state.cache[id] = response\n                        resolve(response)\n                    })\n                    .catch(reject)\n            }\n        })\n    }\n\n    createLayer(id, options) {\n        this.setState({\n            id: id,\n            labelFeatures: options.labels\n        })\n        this.state.layer.clearLayers()\n        this.state.labels.clearLayers()\n        this.load(id)\n            .then(response => {\n                const data = Object.assign({}, response)\n                if ('filters' in options && options.filters.length) {\n                    data.features = data.features.filter(feature => {\n                        const valid = []\n                        options.filters.forEach(item => {\n                            Object.keys(item).forEach(key => {\n                                if (key in feature.properties) {\n                                    valid.push(feature.properties[key] === item[key])\n                                }\n                            })\n                        })\n                        return valid.indexOf(true) > -1\n                    })\n                }\n                if ('selected' in options && options.selected.length) {\n                    data.features = data.features.map(feature => {\n                        const valid = []\n                        options.selected.forEach(item => {\n                            Object.keys(item).forEach(key => {\n                                if (key in feature.properties) {\n                                    valid.push(feature.properties[key] === item[key])\n                                }\n                            })\n                        })\n                        if (valid.indexOf(true) > -1) {\n                            feature._selected = true\n                        }\n                        return feature\n                    })\n                }\n                this.state.layer.addData(data)\n                this.state.map.fitBounds(this.state.layer.getBounds(), {padding: [0, 0]})\n            })\n    }\n\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}