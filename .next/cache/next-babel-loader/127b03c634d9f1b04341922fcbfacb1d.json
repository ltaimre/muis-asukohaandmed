{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\n\nvar rdfetch = require('@rdfjs/fetch');\n\nvar Test = function Test(props) {\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, \"Proov\");\n};\n\nTest.getInitialProps = function getInitialProps(context) {\n  var ev2, ev, label, count, list, array, _iterator2, _step2, quad, a;\n\n  return _regeneratorRuntime.async(function getInitialProps$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          ev = function _ev2(link) {\n            var res, dataset, _iterator, _step, quad;\n\n            return _regeneratorRuntime.async(function ev$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 3:\n                    res = _context2.sent;\n                    _context2.next = 6;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 6:\n                    dataset = _context2.sent;\n                    _iterator = _createForOfIteratorHelper(dataset);\n\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        quad = _step.value;\n                        if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\") //console.log(\"subjekt: \" + quad.subject.value + ' predikaat: ' + quad.predicate.value + ' objekt: ' + quad.object.value)\n                          //console.log(' objekt: ' + quad.object.value);\n                          //var a = getEvent(quad.object.value);\n                          //console.log(a);\n                          ev2(quad.object.value);\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n\n                    _context2.next = 14;\n                    break;\n\n                  case 11:\n                    _context2.prev = 11;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    console.error(_context2.t0);\n\n                  case 14:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[0, 11]], Promise);\n          };\n\n          ev2 = function _ev(link) {\n            var res, dataset, _i, _Object$entries, _Object$entries$_i, key, value;\n\n            return _regeneratorRuntime.async(function ev2$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 3:\n                    res = _context.sent;\n                    _context.next = 6;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 6:\n                    dataset = _context.sent;\n                    console.log(dataset);\n                    console.log(typeof dataset);\n\n                    for (_i = 0, _Object$entries = Object.entries(dataset); _i < _Object$entries.length; _i++) {\n                      _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n                      console.log(\"\".concat(key, \": \").concat(value));\n                    }\n                    /*     for (const quad of dataset) {\n                             //if(quad.predicate.value == \"http://opendata.muis.ee/thesaurus/61/11273\" )\n                                  console.log(\"subjekt: \" + quad.subject.value + ' predikaat: ' + quad.predicate.value + ' objekt: ' + quad.object.value)\n                             //console.log(' objekt: ' + quad.object.value);\n                             //var a = getEvent(quad.object.value);\n                             //console.log(a);\n                         }*/\n\n\n                    _context.next = 15;\n                    break;\n\n                  case 12:\n                    _context.prev = 12;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.error(_context.t0);\n\n                  case 15:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[0, 12]], Promise);\n          };\n\n          label = 'http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of';\n          count = 0;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n              accept: 'application/rdf+xml'\n            }\n          }).then(function (res) {\n            return res.dataset();\n          })[\"catch\"](function (err) {\n            return console.error(err);\n          }));\n\n        case 6:\n          list = _context3.sent;\n          array = [];\n          _iterator2 = _createForOfIteratorHelper(list);\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              quad = _step2.value;\n              if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") array.push(quad.object.value); //var a = getEvent(quad.object.value);\n              // console.log(a);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          console.log(array.length);\n\n          for (a = 10; a < array.length; a++) {\n            ev(array[a]);\n          }\n\n          return _context3.abrupt(\"return\", {\n            count: count\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","rdfetch","require","Test","props","getInitialProps","context","ev2","ev","link","headers","accept","res","dataset","quad","predicate","value","object","console","error","log","Object","entries","key","label","count","then","err","list","array","push","length","a"],"mappings":"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","sourcesContent":["import React from 'react';\nconst rdfetch = require('@rdfjs/fetch');\nconst Test= props => (\n    <p>Proov</p>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       async function ev2(link) {\n           try {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               })\n\n               const dataset = await res.dataset();\n               console.log(dataset);\n               console.log(typeof dataset);\n\n               for (let [key, value] of Object.entries(dataset)) {\n                   console.log(`${key}: ${value}`);\n               }\n\n          /*     for (const quad of dataset) {\n                   //if(quad.predicate.value == \"http://opendata.muis.ee/thesaurus/61/11273\" )\n\n                       console.log(\"subjekt: \" + quad.subject.value + ' predikaat: ' + quad.predicate.value + ' objekt: ' + quad.object.value)\n                   //console.log(' objekt: ' + quad.object.value);\n                   //var a = getEvent(quad.object.value);\n                   //console.log(a);\n               }*/\n           } catch (err) {\n               console.error(err)\n           }\n       }\n\n       async function ev(link) {\n           try {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               })\n\n               const dataset = await res.dataset();\n\n               for (const quad of dataset) {\n                   if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" )\n\n                   //console.log(\"subjekt: \" + quad.subject.value + ' predikaat: ' + quad.predicate.value + ' objekt: ' + quad.object.value)\n                   //console.log(' objekt: ' + quad.object.value);\n                   //var a = getEvent(quad.object.value);\n                   //console.log(a);\n                       ev2(quad.object.value);\n               }\n           } catch (err) {\n               console.error(err)\n           }\n       }\n\n\n        const label = 'http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of';\n        let count = 0;\n        const list = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n                accept: 'application/rdf+xml'\n            }\n        }).then(res => res.dataset())\n            .catch(err => console.error(err));\n        const array = [];\n              for (const quad of list) {\n          if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n\n                array.push(quad.object.value);\n                  //var a = getEvent(quad.object.value);\n               // console.log(a);\n\n      }\n        console.log(array.length);\n       for(let a = 10; a < array.length;  a++ ) {\n           ev(array[a]);\n       }\n\n\n        return {count};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}