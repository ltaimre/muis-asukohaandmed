{"ast":null,"code":"var _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n\nconst rdfetch = require('@rdfjs/fetch');\n\nconst Map = dynamic(() => import('../components/Map'), {\n  ssr: false,\n  loading: () => 'Loading...',\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/Map')],\n    modules: ['../components/Map']\n  }\n});\n\nconst Test = props => __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, \"Proov\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, this.props.count2));\n\nTest.getInitialProps = async function getInitialProps(context) {\n  async function ev2(link) {\n    const res = await rdfetch(`${link}`, {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    });\n    const dataset = await res.dataset();\n\n    for (const quad of dataset) {\n      if (quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\") return true;\n    }\n\n    return false;\n  }\n\n  async function ev(link) {\n    const res = await rdfetch(`${link}`, {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    });\n    const dataset = await res.dataset();\n\n    for (const quad of dataset) {\n      if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\") if (ev2(quad.object.value)) {\n        console.log(\"Jah\");\n      }\n      ;\n    }\n  }\n\n  const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n    headers: {\n      accept: 'application/rdf+xml'\n    }\n  });\n  const dataset = await res.dataset();\n  let count2 = 2;\n  let count = 0;\n\n  for (const quad of dataset) {\n    if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") {\n      count++;\n    } // array.push(quad.object.value);\n    //var a = getEvent(quad.object.value);\n    // console.log(a);\n\n  }\n\n  console.log(count);\n  return {\n    count2\n  };\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","dynamic","rdfetch","require","Map","ssr","loading","Test","props","count2","getInitialProps","context","ev2","link","res","headers","accept","dataset","quad","predicate","object","ev","value","console","log","count"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGH,OAAO,CAAC,MAAM,OAAO,mBAAP,CAAP,EAAoC;AACnDI,EAAAA,GAAG,EAAE,KAD8C;AAEnDC,EAAAA,OAAO,EAAE,MAAM,YAFoC;AAAA;AAAA,wCAAtB,mBAAsB;AAAA,cAAtB,mBAAsB;AAAA;AAAA,CAApC,CAAnB;;AAMA,MAAMC,IAAI,GAAEC,KAAK,IAEb,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI,KAAKA,KAAL,CAAWC,MAAf,CAFJ,CAFJ;;AAUGF,IAAI,CAACG,eAAL,GAAuB,eAAeA,eAAf,CAAgCC,OAAhC,EAAyC;AAE5D,iBAAeC,GAAf,CAAmBC,IAAnB,EAAyB;AACjB,UAAMC,GAAG,GAAG,MAAMZ,OAAO,CAAE,GAAEW,IAAK,EAAT,EAAY;AACjCE,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AADwB,KAAZ,CAAzB;AAKH,UAAMC,OAAO,GAAG,MAAMH,GAAG,CAACG,OAAJ,EAAtB;;AACA,SAAK,MAAMC,IAAX,IAAmBD,OAAnB,EAA4B;AACrB,UAAGC,IAAI,CAACC,SAAL,CAAeC,MAAf,IAAyB,4CAA5B,EACI,OAAO,IAAP;AACX;;AACA,WAAO,KAAP;AACJ;;AAED,iBAAeC,EAAf,CAAkBR,IAAlB,EAAwB;AAChB,UAAMC,GAAG,GAAG,MAAMZ,OAAO,CAAE,GAAEW,IAAK,EAAT,EAAY;AACjCE,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AADwB,KAAZ,CAAzB;AAMA,UAAMC,OAAO,GAAG,MAAMH,GAAG,CAACG,OAAJ,EAAtB;;AAEA,SAAK,MAAMC,IAAX,IAAmBD,OAAnB,EAA4B;AACxB,UAAGC,IAAI,CAACC,SAAL,CAAeG,KAAf,IAAwB,oEAA3B,EAEI,IAAGV,GAAG,CAACM,IAAI,CAACE,MAAL,CAAYE,KAAb,CAAN,EAA2B;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AAAA;AACR;AACJ;;AAKL,QAAMV,GAAG,GAAG,MAAMZ,OAAO,CAAC,iDAAD,EAAoD;AACxEa,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAD+D,GAApD,CAAzB;AAKA,QAAMC,OAAO,GAAG,MAAMH,GAAG,CAACG,OAAJ,EAAtB;AACA,MAAIR,MAAM,GAAG,CAAb;AACA,MAAIgB,KAAK,GAAG,CAAZ;;AACA,OAAK,MAAMP,IAAX,IAAmBD,OAAnB,EAA4B;AACvB,QAAGC,IAAI,CAACC,SAAL,CAAeG,KAAf,IAAwB,uDAA3B,EAEA;AAAEG,MAAAA,KAAK;AAAI,KAHY,CAMpB;AACG;AACH;;AAER;;AAGEF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,SAAO;AAAChB,IAAAA;AAAD,GAAP;AACH,CA5DF;;AAiEH,eAAeF,IAAf","sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic'\nconst rdfetch = require('@rdfjs/fetch');\nconst Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});\n\n\nconst Test= props => (\n\n    <React.Fragment>\n        <p>Proov</p>\n        <p>{this.props.count2}</p>\n    </React.Fragment>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       async function ev2(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               })\n            const dataset = await res.dataset();\n            for (const quad of dataset) {\n                   if(quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\" )\n                       return true;\n           }\n            return false;\n       }\n\n       async function ev(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               });\n\n               const dataset = await res.dataset();\n\n               for (const quad of dataset) {\n                   if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" )\n\n                       if(ev2(quad.object.value)) {\n                           console.log(\"Jah\")\n                       };\n               }\n           }\n\n\n\n\n       const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n                accept: 'application/rdf+xml'\n            }\n        });\n       const dataset = await res.dataset();\n       let count2 = 2;\n       let count = 0;\n       for (const quad of dataset) {\n            if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n\n            { count ++}\n\n\n               // array.push(quad.object.value);\n                  //var a = getEvent(quad.object.value);\n               // console.log(a);\n\n      }\n\n\n         console.log(count);\n        return {count2};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}