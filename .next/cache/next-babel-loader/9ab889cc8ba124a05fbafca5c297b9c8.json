{"ast":null,"code":"var _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/components/Map.js\";\nvar __jsx = React.createElement;\nimport L from 'leaflet';\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nconst elId = 'map';\nconst style = {\n  default: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  hover: {\n    color: '#0055B8',\n    weight: 4,\n    opacity: .6,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  selected: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: '#0055B8',\n    fillOpacity: 1\n  }\n};\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    const mapData = await fetch(`/data/maakond.geojson`).then(response => response.json());\n    console.log(mapData);\n    const map = L.map(elId, {\n      attributionControl: false,\n      zoomControl: false,\n      zoomSnap: 0\n    });\n    L.geoJSON(mapData.features[0], {\n      style: style.default\n    }).addTo(map);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"map\",\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    });\n  }\n\n  createMap(elId) {\n    // disable drag and zoom handlers\n    map.dragging.disable();\n    map.touchZoom.disable();\n    map.doubleClickZoom.disable();\n    map.scrollWheelZoom.disable();\n    return map;\n  }\n\n  createLayer(id, options) {\n    this.setState({\n      id: id,\n      labelFeatures: options.labels\n    });\n    this.state.layer.clearLayers();\n    this.state.labels.clearLayers();\n    this.load(id).then(response => {\n      const data = Object.assign({}, response);\n\n      if ('filters' in options && options.filters.length) {\n        data.features = data.features.filter(feature => {\n          const valid = [];\n          options.filters.forEach(item => {\n            Object.keys(item).forEach(key => {\n              if (key in feature.properties) {\n                valid.push(feature.properties[key] === item[key]);\n              }\n            });\n          });\n          return valid.indexOf(true) > -1;\n        });\n      }\n\n      if ('selected' in options && options.selected.length) {\n        data.features = data.features.map(feature => {\n          const valid = [];\n          options.selected.forEach(item => {\n            Object.keys(item).forEach(key => {\n              if (key in feature.properties) {\n                valid.push(feature.properties[key] === item[key]);\n              }\n            });\n          });\n\n          if (valid.indexOf(true) > -1) {\n            feature._selected = true;\n          }\n\n          return feature;\n        });\n      }\n\n      this.state.layer.addData(data);\n      this.state.map.fitBounds(this.state.layer.getBounds(), {\n        padding: [0, 0]\n      });\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/components/Map.js"],"names":["L","fetch","React","Component","elId","style","default","color","weight","opacity","fillColor","fillOpacity","hover","selected","Map","constructor","props","componentDidMount","mapData","then","response","json","console","log","map","attributionControl","zoomControl","zoomSnap","geoJSON","features","addTo","render","createMap","dragging","disable","touchZoom","doubleClickZoom","scrollWheelZoom","createLayer","id","options","setState","labelFeatures","labels","state","layer","clearLayers","load","data","Object","assign","filters","length","filter","feature","valid","forEach","item","keys","key","properties","push","indexOf","_selected","addData","fitBounds","getBounds","padding"],"mappings":"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","sourcesContent":["import L from 'leaflet'\nimport fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react'\n\nconst elId = 'map'\n\nconst style = {\n    default: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    hover: {\n        color: '#0055B8',\n        weight: 4,\n        opacity: .6,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    selected: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: '#0055B8',\n        fillOpacity: 1\n    }\n}\n\nclass Map extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n\n    async componentDidMount() {\n        const mapData = await fetch(`/data/maakond.geojson`).then(response => response.json());\n        console.log(mapData);\n\n        const map = L.map(elId, {\n            attributionControl: false,\n            zoomControl: false,\n            zoomSnap: 0\n        })\n\n\n        L.geoJSON(mapData.features[0], {\n            style: style.default\n        }).addTo(map);\n    }\n\n    render() {\n        return <div id=\"map\" className=\"map\">\n        </div>\n    }\n\n\n\n    createMap(elId) {\n\n        // disable drag and zoom handlers\n        map.dragging.disable()\n        map.touchZoom.disable()\n        map.doubleClickZoom.disable()\n        map.scrollWheelZoom.disable()\n        return map\n    }\n\n\n\n\n\n    createLayer(id, options) {\n        this.setState({\n            id: id,\n            labelFeatures: options.labels\n        })\n        this.state.layer.clearLayers()\n        this.state.labels.clearLayers()\n        this.load(id)\n            .then(response => {\n                const data = Object.assign({}, response)\n                if ('filters' in options && options.filters.length) {\n                    data.features = data.features.filter(feature => {\n                        const valid = []\n                        options.filters.forEach(item => {\n                            Object.keys(item).forEach(key => {\n                                if (key in feature.properties) {\n                                    valid.push(feature.properties[key] === item[key])\n                                }\n                            })\n                        })\n                        return valid.indexOf(true) > -1\n                    })\n                }\n                if ('selected' in options && options.selected.length) {\n                    data.features = data.features.map(feature => {\n                        const valid = []\n                        options.selected.forEach(item => {\n                            Object.keys(item).forEach(key => {\n                                if (key in feature.properties) {\n                                    valid.push(feature.properties[key] === item[key])\n                                }\n                            })\n                        })\n                        if (valid.indexOf(true) > -1) {\n                            feature._selected = true\n                        }\n                        return feature\n                    })\n                }\n                this.state.layer.addData(data)\n                this.state.map.fitBounds(this.state.layer.getBounds(), {padding: [0, 0]})\n            })\n    }\n\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}