{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\n\nvar rdfetch = require('@rdfjs/fetch');\n\nvar KihMap = dynamic(function () {\n  return import('../components/KihMap');\n}, {\n  ssr: false,\n  loading: function loading() {\n    return 'Loading...';\n  }\n});\n\nvar Test = function Test(props) {\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, _this.props.count), __jsx(KihMap, {\n    className: \"map\",\n    layer: \"region1922\",\n    labels: true,\n    clickable: true,\n    hover: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }));\n};\n\nTest.getInitialProps = function getInitialProps(context) {\n  var ev2, ev, count;\n  return _regeneratorRuntime.async(function getInitialProps$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          ev = function _ev2(link) {\n            var res, dataset, _iterator2, _step2, quad;\n\n            return _regeneratorRuntime.async(function ev$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context2.sent;\n                    _context2.next = 5;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 5:\n                    dataset = _context2.sent;\n                    _iterator2 = _createForOfIteratorHelper(dataset);\n\n                    try {\n                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                        quad = _step2.value;\n                        if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\") if (ev2(quad.object.value)) {\n                          console.log(\"Jah\");\n                        }\n                        ;\n                      }\n                    } catch (err) {\n                      _iterator2.e(err);\n                    } finally {\n                      _iterator2.f();\n                    }\n\n                  case 8:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          ev2 = function _ev(link) {\n            var res, dataset, _iterator, _step, quad;\n\n            return _regeneratorRuntime.async(function ev2$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }));\n\n                  case 2:\n                    res = _context.sent;\n                    _context.next = 5;\n                    return _regeneratorRuntime.awrap(res.dataset());\n\n                  case 5:\n                    dataset = _context.sent;\n                    _iterator = _createForOfIteratorHelper(dataset);\n                    _context.prev = 7;\n\n                    _iterator.s();\n\n                  case 9:\n                    if ((_step = _iterator.n()).done) {\n                      _context.next = 15;\n                      break;\n                    }\n\n                    quad = _step.value;\n\n                    if (!(quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\")) {\n                      _context.next = 13;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", true);\n\n                  case 13:\n                    _context.next = 9;\n                    break;\n\n                  case 15:\n                    _context.next = 20;\n                    break;\n\n                  case 17:\n                    _context.prev = 17;\n                    _context.t0 = _context[\"catch\"](7);\n\n                    _iterator.e(_context.t0);\n\n                  case 20:\n                    _context.prev = 20;\n\n                    _iterator.f();\n\n                    return _context.finish(20);\n\n                  case 23:\n                    return _context.abrupt(\"return\", false);\n\n                  case 24:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[7, 17, 20, 23]], Promise);\n          };\n\n          /*       const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n                     headers: {\n                         accept: 'application/rdf+xml'\n                     }\n                 });\n                 const dataset = await res.dataset();\n                 const array = [];\n                 for (const quad of dataset) {\n                   if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n                          array.push(quad.object.value);\n                           //var a = getEvent(quad.object.value);\n                        // console.log(a);\n                }\n                for(let a = 10; a < array.length;  a++ ) {\n                    ev(array[a]);\n                }*/\n          count = 0;\n          return _context3.abrupt(\"return\", {\n            count: count\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","rdfetch","require","KihMap","dynamic","ssr","loading","Test","props","count","getInitialProps","context","ev2","ev","link","headers","accept","res","dataset","quad","predicate","value","object","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC;AAAA,SAAM,OAAO,sBAAP,CAAN;AAAA,CAAD,EAAuC;AACzDC,EAAAA,GAAG,EAAE,KADoD;AAEzDC,EAAAA,OAAO,EAAE;AAAA,WAAM,YAAN;AAAA;AAFgD,CAAvC,CAAtB;;AAMA,IAAMC,IAAI,GAAE,SAANA,IAAM,CAAAC,KAAK;AAAA,SACb,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,KAAI,CAACA,KAAL,CAAWC,KAAf,CADA,EAEA,MAAC,MAAD;AACJ,IAAA,SAAS,EAAC,KADN;AAEJ,IAAA,KAAK,EAAC,YAFF;AAGJ,IAAA,MAAM,EAAE,IAHJ;AAIJ,IAAA,SAAS,EAAE,IAJP;AAKJ,IAAA,KAAK,EAAE,IALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADa;AAAA,CAAjB;;AAgBGF,IAAI,CAACG,eAAL,GAAuB,SAAeA,eAAf,CAAgCC,OAAhC;AAAA,MAEJC,GAFI,EAgBJC,EAhBI;AAAA;AAAA;AAAA;AAAA;AAgBJA,UAAAA,EAhBI,iBAgBDC,IAhBC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAiBOb,OAAO,WAAIa,IAAJ,GAAY;AACjCC,sBAAAA,OAAO,EAAE;AACLC,wBAAAA,MAAM,EAAE;AADH;AADwB,qBAAZ,CAjBd;;AAAA;AAiBLC,oBAAAA,GAjBK;AAAA;AAAA,qDAuBWA,GAAG,CAACC,OAAJ,EAvBX;;AAAA;AAuBLA,oBAAAA,OAvBK;AAAA,4DAyBQA,OAzBR;;AAAA;AAyBX,6EAA4B;AAAjBC,wBAAAA,IAAiB;AACxB,4BAAGA,IAAI,CAACC,SAAL,CAAeC,KAAf,IAAwB,oEAA3B,EAEI,IAAGT,GAAG,CAACO,IAAI,CAACG,MAAL,CAAYD,KAAb,CAAN,EAA2B;AACvBE,0BAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AAAA;AACR;AA/BU;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEJZ,UAAAA,GAFI,gBAEAE,IAFA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAGOb,OAAO,WAAIa,IAAJ,GAAY;AACjCC,sBAAAA,OAAO,EAAE;AACLC,wBAAAA,MAAM,EAAE;AADH;AADwB,qBAAZ,CAHd;;AAAA;AAGLC,oBAAAA,GAHK;AAAA;AAAA,qDAQQA,GAAG,CAACC,OAAJ,EARR;;AAAA;AAQRA,oBAAAA,OARQ;AAAA,2DASKA,OATL;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AASHC,oBAAAA,IATG;;AAAA,0BAUJA,IAAI,CAACC,SAAL,CAAeE,MAAf,IAAyB,4CAVrB;AAAA;AAAA;AAAA;;AAAA,qDAWI,IAXJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,qDAaP,KAbO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqCzB;;;;;;;;;;;;;;;;AAoBWb,UAAAA,KAzDc,GAyDN,CAzDM;AAAA,4CA0DX;AAACA,YAAAA,KAAK,EAALA;AAAD,WA1DW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAgEH,eAAeF,IAAf","sourcesContent":["import React from 'react';\nconst rdfetch = require('@rdfjs/fetch');\nconst KihMap = dynamic(() => import('../components/KihMap'), {\n    ssr: false,\n    loading: () => 'Loading...'\n})\n\n\nconst Test= props => (\n    <React.Fragment>\n    <p>{this.props.count}</p>\n    <KihMap\nclassName=\"map\"\nlayer=\"region1922\"\nlabels={true}\nclickable={true}\nhover={true}\n/>\n    </React.Fragment>\n\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       async function ev2(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               })\n            const dataset = await res.dataset();\n            for (const quad of dataset) {\n                   if(quad.predicate.object == \"http://opendata.muis.ee/thesaurus/61/11273\" )\n                       return true;\n           }\n            return false;\n       }\n\n       async function ev(link) {\n               const res = await rdfetch(`${link}`, {\n                   headers: {\n                       accept: 'application/rdf+xml'\n                   }\n               });\n\n               const dataset = await res.dataset();\n\n               for (const quad of dataset) {\n                   if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" )\n\n                       if(ev2(quad.object.value)) {\n                           console.log(\"Jah\")\n                       };\n               }\n           }\n\n\n\n\n /*       const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n                accept: 'application/rdf+xml'\n            }\n        });\n\n       const dataset = await res.dataset();\n        const array = [];\n        for (const quad of dataset) {\n          if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n\n                array.push(quad.object.value);\n                  //var a = getEvent(quad.object.value);\n               // console.log(a);\n\n      }\n       for(let a = 10; a < array.length;  a++ ) {\n           ev(array[a]);\n       }*/\n\n        let count = 0;\n        return {count};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}