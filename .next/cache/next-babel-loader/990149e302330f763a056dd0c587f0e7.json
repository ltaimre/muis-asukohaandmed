{"ast":null,"code":"var _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport dynamic from 'next/dynamic';\n\nconst rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nconst Test = props => __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, \"Museaale muuseumis: \", props.count), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, \"Museaale valikus: \", props.choice), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, \"Museaale s\\xFCndmusega: \", props.countEvent));\n\nTest.getInitialProps = async function getInitialProps(context) {\n  function isIterable(obj) {\n    if (obj == null) {\n      return false;\n    }\n\n    return typeof obj[Symbol.iterator] === 'function';\n  }\n\n  async function hasHigher(link) {\n    const res = await rdfetch(`${link}`, {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    });\n    const dataset = await res.dataset(); //\n\n    for (const quad of dataset) {\n      if (quad.object.value == \"http://www.cidoc-crm.org/cidoc-crm/P127_has_broader_term\") {\n        console.log(`subjekt: ${quad.subject.value}, predikaat: ${quad.predicate.value} objekt: ${quad.object.value}`);\n      }\n    }\n  }\n\n  async function isTypeEvent(link) {\n    const dataset = await rdfetch(`${link}`, {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    }).then(res => res.dataset()).catch(err => console.error(err));\n\n    if (isIterable(dataset)) {\n      for (const quad of dataset) {\n        if (quad.object.value == \"http://opendata.muis.ee/thesaurus/61/11273\") {\n          return true;\n        }\n        /*   else{\n               hasHigher(quad.object.value);\n           }*/\n\n      }\n    }\n  }\n\n  async function hasEvent(link) {\n    const dataset = await rdfetch(`${link}`, {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    }).then(res => res.dataset()).catch(err => console.error(err));\n\n    for (const quad of dataset) {\n      if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\") {\n        {\n          let isType = await isTypeEvent(quad.object.value);\n\n          if (isType) {\n            return true;\n          }\n        }\n      }\n    }\n  }\n\n  let count = 0;\n  let countEvent = 0;\n  const choice = 100;\n  const array = [];\n  const value = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/34191').then(res => res.dataset()).then(dataset => {\n    for (const quad of dataset) {\n      if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") {\n        array.push(quad.object.value);\n        count++;\n      }\n    }\n  }).catch(err => console.error(err));\n\n  for (let x = 0; x < array.length; x++) {\n    {\n      let hasEv = await hasEvent(array[x]);\n\n      if (hasEv) {\n        countEvent++;\n      }\n    }\n  }\n\n  return {\n    count,\n    choice,\n    countEvent\n  };\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","dynamic","rdfetch","require","Test","props","count","choice","countEvent","getInitialProps","context","isIterable","obj","Symbol","iterator","hasHigher","link","res","headers","accept","dataset","quad","object","value","console","log","subject","predicate","isTypeEvent","then","catch","err","error","hasEvent","isType","array","push","x","length","hasEv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic'\nconst rdfetch = require('@rdfjs/fetch');\n/*const Map = dynamic(() => import('../components/Map'), {\n    ssr: false,\n    loading: () => 'Loading...'\n});*/\n\n\nconst Test= props => (\n\n    <React.Fragment>\n        <p>Museaale muuseumis: {props.count}</p>\n        <p>Museaale valikus: {props.choice}</p>\n        <p>Museaale s√ºndmusega: {props.countEvent}</p>\n\n    </React.Fragment>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n\n       function isIterable(obj) {\n           if (obj == null) {\n               return false;\n           }\n           return typeof obj[Symbol.iterator] === 'function';\n       }\n\n       async function hasHigher(link) {\n           const res = await rdfetch(`${link}`, {\n               headers: {\n                   accept: 'application/rdf+xml'\n               }\n           });\n           const dataset = await res.dataset();\n                //\n           for (const quad of dataset) {\n               if(quad.object.value == \"http://www.cidoc-crm.org/cidoc-crm/P127_has_broader_term\" ) {\n                   console.log(`subjekt: ${quad.subject.value}, predikaat: ${quad.predicate.value} objekt: ${quad.object.value}`)\n               }\n\n\n       }\n       }\n\n\n       async function isTypeEvent(link) {\n           const dataset = await rdfetch(`${link}`, {\n               headers: {\n                   accept: 'application/rdf+xml'\n               }\n           })\n               .then(res => res.dataset())\n               .catch(err => console.error(err));\n            if(isIterable(dataset)) {\n                for (const quad of dataset) {\n                    if(quad.object.value == \"http://opendata.muis.ee/thesaurus/61/11273\" ) {\n                        return true;\n                    }\n                    /*   else{\n                           hasHigher(quad.object.value);\n                       }*/\n\n                }\n\n\n            }\n\n\n       }\n\n       async function hasEvent(link) {\n          const dataset = await rdfetch(`${link}`, {\n              headers: {\n                  accept: 'application/rdf+xml'\n              }\n          })\n               .then(res => res.dataset())\n               .catch(err => console.error(err));\n           for (const quad of dataset) {\n               if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P12_occurred_in_the_presence_of\" ) {\n                   { let isType = await isTypeEvent(quad.object.value);\n                       if(isType) {\n                           return true;\n                       }\n\n                   }\n\n\n               }\n           }\n       }\n\n\n\n\n       let count = 0;\n       let countEvent = 0;\n       const choice = 100;\n       const array = [];\n\n        const value = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/34191')\n           .then(res => res.dataset())\n           .then(dataset => {\n               for (const quad of dataset) {\n                   if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n                   { array.push(quad.object.value);\n                       count ++\n                   }\n               }\n           })\n           .catch(err => console.error(err));\n\n\n      for (let x = 0; x<array.length; x++) {\n           { let hasEv = await hasEvent(array[x]);\n               if(hasEv) {\n                   countEvent++\n               }\n\n           }\n\n\n       }\n\n\n\n\n       return {count, choice, countEvent};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}