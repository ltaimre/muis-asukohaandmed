{"ast":null,"code":"var _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst rdfetch = require('@rdfjs/fetch');\n\nconst Test = props => __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}, \"Proov\");\n\nTest.getInitialProps = async function (context) {\n  const a = [\"sinisilm\"];\n\n  async function main() {\n    const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n      headers: {\n        accept: 'application/rdf+xml'\n      }\n    });\n    const dataset = await res.dataset();\n    let res2;\n    let dataset2;\n\n    for (const quad of dataset) {\n      if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") {\n        res2 = await rdfetch(quad.object.value, {\n          headers: {\n            accept: 'application/rdf+xml'\n          }\n        });\n        dataset2 = await res2.dataset();\n\n        for (const quad2 of dataset2) {\n          if (quad2.predicate.value == \"http://www.w3.org/2000/01/rdf-schema#label \") {\n            //console.log(\"subjekt: \" + quad2.subject.value + ' predikaat: ' + quad2.predicate.value + ' objekt: ' + quad2.object.value)\n            console.log(' objekt: ' + quad.object.value);\n          }\n        }\n      }\n    }\n  } //main\n\n\n  main();\n  return {\n    a\n  };\n}; //inital props\n\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","rdfetch","require","Test","props","getInitialProps","context","a","main","res","headers","accept","dataset","res2","dataset2","quad","predicate","value","object","quad2","console","log"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGC,KAAK,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;;AAIAD,IAAI,CAACE,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAE5C,QAAMC,CAAC,GAAG,CAAC,UAAD,CAAV;;AACF,iBAAeC,IAAf,GAAuB;AAEb,UAAMC,GAAG,GAAG,MAAMR,OAAO,CAAC,iDAAD,EAAoD;AACzES,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AADgE,KAApD,CAAzB;AAKA,UAAMC,OAAO,GAAG,MAAMH,GAAG,CAACG,OAAJ,EAAtB;AACA,QAAIC,IAAJ;AACA,QAAIC,QAAJ;;AACA,SAAK,MAAMC,IAAX,IAAmBH,OAAnB,EAA4B;AACpB,UAAGG,IAAI,CAACC,SAAL,CAAeC,KAAf,IAAwB,uDAA3B,EAAoF;AAEhFJ,QAAAA,IAAI,GAAG,MAAMZ,OAAO,CAACc,IAAI,CAACG,MAAL,CAAYD,KAAb,EAAoB;AACpCP,UAAAA,OAAO,EAAE;AACLC,YAAAA,MAAM,EAAE;AADH;AAD2B,SAApB,CAApB;AAMAG,QAAAA,QAAQ,GAAG,MAAMD,IAAI,CAACD,OAAL,EAAjB;;AAEA,aAAK,MAAMO,KAAX,IAAoBL,QAApB,EAA8B;AAE1B,cAAGK,KAAK,CAACH,SAAN,CAAgBC,KAAhB,IAAyB,6CAA5B,EAA2E;AAE5E;AACCG,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAcN,IAAI,CAACG,MAAL,CAAYD,KAAtC;AAEH;AACA;AAIJ;AAGJ;AACJ,GAxCmC,CAwCnC;;;AAGTT,EAAAA,IAAI;AAEJ,SAAO;AAACD,IAAAA;AAAD,GAAP;AACH,CA9CD,C,CA8CG;;;AACH,eAAeJ,IAAf","sourcesContent":["\nimport React from 'react';\nconst rdfetch = require('@rdfjs/fetch');\nconst Test = props => (\n    <p>Proov</p>\n);\n\nTest.getInitialProps = async function (context) {\n\n    const a = [\"sinisilm\"];\n  async function main () {\n\n            const res = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n                headers: {\n                    accept: 'application/rdf+xml'\n                }\n            });\n            const dataset = await res.dataset();\n            let res2;\n            let dataset2;\n            for (const quad of dataset) {\n                    if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") {\n\n                        res2 = await rdfetch(quad.object.value, {\n                            headers: {\n                                accept: 'application/rdf+xml'\n                            }\n                        })\n\n                        dataset2 = await res2.dataset();\n\n                        for (const quad2 of dataset2) {\n\n                            if(quad2.predicate.value == \"http://www.w3.org/2000/01/rdf-schema#label \") {\n\n                           //console.log(\"subjekt: \" + quad2.subject.value + ' predikaat: ' + quad2.predicate.value + ' objekt: ' + quad2.object.value)\n                            console.log(' objekt: ' + quad.object.value);\n\n                        }\n                        }\n\n\n\n                    }\n\n\n                }\n            }//main\n\n\n    main();\n\n    return {a};\n}; //inital props\nexport default Test\n"]},"metadata":{},"sourceType":"module"}