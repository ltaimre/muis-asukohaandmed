{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/components/Map.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport L from 'leaflet';\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nvar elId = 'map';\nvar style = {\n  \"default\": {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  hover: {\n    color: '#0055B8',\n    weight: 4,\n    opacity: .6,\n    fillColor: 'red',\n    fillOpacity: 1\n  },\n  selected: {\n    color: '#0055B8',\n    weight: 1,\n    opacity: 1,\n    fillColor: '#0055B8',\n    fillOpacity: 1\n  }\n};\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    _classCallCheck(this, Map);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var mapData, map;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"/data/maakond.geojson\").then(function (response) {\n                return response.json();\n              }));\n\n            case 2:\n              mapData = _context.sent;\n              console.log(mapData);\n              map = L.map('map').setView({\n                lon: 0,\n                lat: 0\n              }, 2); // add the OpenStreetMap tiles\n\n              L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                maxZoom: 19,\n                attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap contributors</a>'\n              }).addTo(map);\n              L.geoJSON(mapData.features[0], {\n                style: style[\"default\"]\n              }).addTo(map);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          height: 180\n        },\n        id: \"map\",\n        className: \"map\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap(elId) {\n      // disable drag and zoom handlers\n      map.dragging.disable();\n      map.touchZoom.disable();\n      map.doubleClickZoom.disable();\n      map.scrollWheelZoom.disable();\n      return map;\n    }\n  }, {\n    key: \"createLayer\",\n    value: function createLayer(id, options) {\n      var _this = this;\n\n      this.setState({\n        id: id,\n        labelFeatures: options.labels\n      });\n      this.state.layer.clearLayers();\n      this.state.labels.clearLayers();\n      this.load(id).then(function (response) {\n        var data = Object.assign({}, response);\n\n        if ('filters' in options && options.filters.length) {\n          data.features = data.features.filter(function (feature) {\n            var valid = [];\n            options.filters.forEach(function (item) {\n              Object.keys(item).forEach(function (key) {\n                if (key in feature.properties) {\n                  valid.push(feature.properties[key] === item[key]);\n                }\n              });\n            });\n            return valid.indexOf(true) > -1;\n          });\n        }\n\n        if ('selected' in options && options.selected.length) {\n          data.features = data.features.map(function (feature) {\n            var valid = [];\n            options.selected.forEach(function (item) {\n              Object.keys(item).forEach(function (key) {\n                if (key in feature.properties) {\n                  valid.push(feature.properties[key] === item[key]);\n                }\n              });\n            });\n\n            if (valid.indexOf(true) > -1) {\n              feature._selected = true;\n            }\n\n            return feature;\n          });\n        }\n\n        _this.state.layer.addData(data);\n\n        _this.state.map.fitBounds(_this.state.layer.getBounds(), {\n          padding: [0, 0]\n        });\n      });\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/components/Map.js"],"names":["L","fetch","React","Component","elId","style","color","weight","opacity","fillColor","fillOpacity","hover","selected","Map","props","then","response","json","mapData","console","log","map","setView","lon","lat","tileLayer","maxZoom","attribution","addTo","geoJSON","features","height","dragging","disable","touchZoom","doubleClickZoom","scrollWheelZoom","id","options","setState","labelFeatures","labels","state","layer","clearLayers","load","data","Object","assign","filters","length","filter","feature","valid","forEach","item","keys","key","properties","push","indexOf","_selected","addData","fitBounds","getBounds","padding"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,IAAI,GAAG,KAAb;AAEA,IAAMC,KAAK,GAAG;AACV,aAAS;AACLC,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,MAAM,EAAE,CAFH;AAGLC,IAAAA,OAAO,EAAE,CAHJ;AAILC,IAAAA,SAAS,EAAE,KAJN;AAKLC,IAAAA,WAAW,EAAE;AALR,GADC;AAQVC,EAAAA,KAAK,EAAE;AACHL,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,MAAM,EAAE,CAFL;AAGHC,IAAAA,OAAO,EAAE,EAHN;AAIHC,IAAAA,SAAS,EAAE,KAJR;AAKHC,IAAAA,WAAW,EAAE;AALV,GARG;AAeVE,EAAAA,QAAQ,EAAE;AACNN,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,OAAO,EAAE,CAHH;AAINC,IAAAA,SAAS,EAAE,SAJL;AAKNC,IAAAA,WAAW,EAAE;AALP;AAfA,CAAd;;IAwBMG,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAGlB;;;;;;;;;;;+CAGyBb,KAAK,yBAAL,CAA+Bc,IAA/B,CAAoC,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eAA5C,C;;;AAAhBC,cAAAA,O;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAIIG,cAAAA,G,GAAMrB,CAAC,CAACqB,GAAF,CAAM,KAAN,EAAaC,OAAb,CAAqB;AAACC,gBAAAA,GAAG,EAAE,CAAN;AAASC,gBAAAA,GAAG,EAAE;AAAd,eAArB,EAAuC,CAAvC,C,EAEV;;AACAxB,cAAAA,CAAC,CAACyB,SAAF,CAAY,oDAAZ,EAAkE;AAC9DC,gBAAAA,OAAO,EAAE,EADqD;AAE9DC,gBAAAA,WAAW,EAAE;AAFiD,eAAlE,EAGGC,KAHH,CAGSP,GAHT;AAMArB,cAAAA,CAAC,CAAC6B,OAAF,CAAUX,OAAO,CAACY,QAAR,CAAiB,CAAjB,CAAV,EAA+B;AAC3BzB,gBAAAA,KAAK,EAAEA,KAAK;AADe,eAA/B,EAEGuB,KAFH,CAESP,GAFT;;;;;;;;;;;6BAKK;AACL,aAAO;AAAK,QAAA,KAAK,EAAE;AAACU,UAAAA,MAAM,EAAE;AAAT,SAAZ;AAA4B,QAAA,EAAE,EAAC,KAA/B;AAAqC,QAAA,SAAS,EAAC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH;;;8BAIS3B,I,EAAM;AAEZ;AACAiB,MAAAA,GAAG,CAACW,QAAJ,CAAaC,OAAb;AACAZ,MAAAA,GAAG,CAACa,SAAJ,CAAcD,OAAd;AACAZ,MAAAA,GAAG,CAACc,eAAJ,CAAoBF,OAApB;AACAZ,MAAAA,GAAG,CAACe,eAAJ,CAAoBH,OAApB;AACA,aAAOZ,GAAP;AACH;;;gCAMWgB,E,EAAIC,O,EAAS;AAAA;;AACrB,WAAKC,QAAL,CAAc;AACVF,QAAAA,EAAE,EAAEA,EADM;AAEVG,QAAAA,aAAa,EAAEF,OAAO,CAACG;AAFb,OAAd;AAIA,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,WAAjB;AACA,WAAKF,KAAL,CAAWD,MAAX,CAAkBG,WAAlB;AACA,WAAKC,IAAL,CAAUR,EAAV,EACKtB,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,YAAM8B,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhC,QAAlB,CAAb;;AACA,YAAI,aAAasB,OAAb,IAAwBA,OAAO,CAACW,OAAR,CAAgBC,MAA5C,EAAoD;AAChDJ,UAAAA,IAAI,CAAChB,QAAL,GAAgBgB,IAAI,CAAChB,QAAL,CAAcqB,MAAd,CAAqB,UAAAC,OAAO,EAAI;AAC5C,gBAAMC,KAAK,GAAG,EAAd;AACAf,YAAAA,OAAO,CAACW,OAAR,CAAgBK,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC5BR,cAAAA,MAAM,CAACS,IAAP,CAAYD,IAAZ,EAAkBD,OAAlB,CAA0B,UAAAG,GAAG,EAAI;AAC7B,oBAAIA,GAAG,IAAIL,OAAO,CAACM,UAAnB,EAA+B;AAC3BL,kBAAAA,KAAK,CAACM,IAAN,CAAWP,OAAO,CAACM,UAAR,CAAmBD,GAAnB,MAA4BF,IAAI,CAACE,GAAD,CAA3C;AACH;AACJ,eAJD;AAKH,aAND;AAOA,mBAAOJ,KAAK,CAACO,OAAN,CAAc,IAAd,IAAsB,CAAC,CAA9B;AACH,WAVe,CAAhB;AAWH;;AACD,YAAI,cAActB,OAAd,IAAyBA,OAAO,CAAC1B,QAAR,CAAiBsC,MAA9C,EAAsD;AAClDJ,UAAAA,IAAI,CAAChB,QAAL,GAAgBgB,IAAI,CAAChB,QAAL,CAAcT,GAAd,CAAkB,UAAA+B,OAAO,EAAI;AACzC,gBAAMC,KAAK,GAAG,EAAd;AACAf,YAAAA,OAAO,CAAC1B,QAAR,CAAiB0C,OAAjB,CAAyB,UAAAC,IAAI,EAAI;AAC7BR,cAAAA,MAAM,CAACS,IAAP,CAAYD,IAAZ,EAAkBD,OAAlB,CAA0B,UAAAG,GAAG,EAAI;AAC7B,oBAAIA,GAAG,IAAIL,OAAO,CAACM,UAAnB,EAA+B;AAC3BL,kBAAAA,KAAK,CAACM,IAAN,CAAWP,OAAO,CAACM,UAAR,CAAmBD,GAAnB,MAA4BF,IAAI,CAACE,GAAD,CAA3C;AACH;AACJ,eAJD;AAKH,aAND;;AAOA,gBAAIJ,KAAK,CAACO,OAAN,CAAc,IAAd,IAAsB,CAAC,CAA3B,EAA8B;AAC1BR,cAAAA,OAAO,CAACS,SAAR,GAAoB,IAApB;AACH;;AACD,mBAAOT,OAAP;AACH,WAbe,CAAhB;AAcH;;AACD,QAAA,KAAI,CAACV,KAAL,CAAWC,KAAX,CAAiBmB,OAAjB,CAAyBhB,IAAzB;;AACA,QAAA,KAAI,CAACJ,KAAL,CAAWrB,GAAX,CAAe0C,SAAf,CAAyB,KAAI,CAACrB,KAAL,CAAWC,KAAX,CAAiBqB,SAAjB,EAAzB,EAAuD;AAACC,UAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAV,SAAvD;AACH,OAlCL;AAmCH;;;;EAzFa9D,S;;AA6FlB,eAAeU,GAAf","sourcesContent":["import L from 'leaflet'\nimport fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react'\n\nconst elId = 'map'\n\nconst style = {\n    default: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    hover: {\n        color: '#0055B8',\n        weight: 4,\n        opacity: .6,\n        fillColor: 'red',\n        fillOpacity: 1\n    },\n    selected: {\n        color: '#0055B8',\n        weight: 1,\n        opacity: 1,\n        fillColor: '#0055B8',\n        fillOpacity: 1\n    }\n}\n\nclass Map extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n\n    async componentDidMount() {\n        const mapData = await fetch(`/data/maakond.geojson`).then(response => response.json());\n        console.log(mapData);\n\n\n\n        var map = L.map('map').setView({lon: 0, lat: 0}, 2);\n\n        // add the OpenStreetMap tiles\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            maxZoom: 19,\n            attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap contributors</a>'\n        }).addTo(map);\n\n\n        L.geoJSON(mapData.features[0], {\n            style: style.default\n        }).addTo(map);\n    }\n\n    render() {\n        return <div style={{height: 180 }} id=\"map\" className=\"map\">\n        </div>\n    }\n\n\n\n    createMap(elId) {\n\n        // disable drag and zoom handlers\n        map.dragging.disable()\n        map.touchZoom.disable()\n        map.doubleClickZoom.disable()\n        map.scrollWheelZoom.disable()\n        return map\n    }\n\n\n\n\n\n    createLayer(id, options) {\n        this.setState({\n            id: id,\n            labelFeatures: options.labels\n        })\n        this.state.layer.clearLayers()\n        this.state.labels.clearLayers()\n        this.load(id)\n            .then(response => {\n                const data = Object.assign({}, response)\n                if ('filters' in options && options.filters.length) {\n                    data.features = data.features.filter(feature => {\n                        const valid = []\n                        options.filters.forEach(item => {\n                            Object.keys(item).forEach(key => {\n                                if (key in feature.properties) {\n                                    valid.push(feature.properties[key] === item[key])\n                                }\n                            })\n                        })\n                        return valid.indexOf(true) > -1\n                    })\n                }\n                if ('selected' in options && options.selected.length) {\n                    data.features = data.features.map(feature => {\n                        const valid = []\n                        options.selected.forEach(item => {\n                            Object.keys(item).forEach(key => {\n                                if (key in feature.properties) {\n                                    valid.push(feature.properties[key] === item[key])\n                                }\n                            })\n                        })\n                        if (valid.indexOf(true) > -1) {\n                            feature._selected = true\n                        }\n                        return feature\n                    })\n                }\n                this.state.layer.addData(data)\n                this.state.map.fitBounds(this.state.layer.getBounds(), {padding: [0, 0]})\n            })\n    }\n\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}