{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/liisitaimre/Documents/hello-next/pages/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\n\nvar rdfetch = require('@rdfjs/fetch');\n\nvar Test = function Test(props) {\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, \"Proov\");\n};\n\nTest.getInitialProps = function getInitialProps(context) {\n  var getEvent, label, count, list, array, _iterator, _step, quad, a;\n\n  return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          getEvent = function _getEvent(link) {\n            var list;\n            return _regeneratorRuntime.async(function getEvent$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(rdfetch(\"\".concat(link), {\n                      headers: {\n                        accept: 'application/rdf+xml'\n                      }\n                    }).then(function (res) {\n                      console.log(typeof res);\n                      res.dataset();\n                      console.log(\"sucess\");\n                      console.log(\"\".concat(link));\n                    }).then(function (r) {\n                      console.log(typeof r);\n                    })[\"catch\"](function (err) {\n                      return console.error(err);\n                    }));\n\n                  case 2:\n                    list = _context.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          ;\n          label = 'http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of';\n          count = 0;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n              accept: 'application/rdf+xml'\n            }\n          }).then(function (res) {\n            return res.dataset();\n          })[\"catch\"](function (err) {\n            return console.error(err);\n          }));\n\n        case 6:\n          list = _context2.sent;\n          array = [];\n          _iterator = _createForOfIteratorHelper(list);\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              quad = _step.value;\n              if (quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\") array.push(quad.object.value); //var a = getEvent(quad.object.value);\n              // console.log(a);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          console.log(array.length);\n\n          for (a = 0; a < 100; a++) {\n            getEvent(array[a]);\n          }\n\n          return _context2.abrupt(\"return\", {\n            count: count\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/liisitaimre/Documents/hello-next/pages/index.js"],"names":["React","rdfetch","require","Test","props","getInitialProps","context","getEvent","link","headers","accept","then","res","console","log","dataset","r","err","error","list","label","count","array","quad","predicate","value","push","object","length","a"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAMC,IAAI,GAAE,SAANA,IAAM,CAAAC,KAAK;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADa;AAAA,CAAjB;;AAMGD,IAAI,CAACE,eAAL,GAAuB,SAAeA,eAAf,CAAgCC,OAAhC;AAAA,MACJC,QADI;;AAAA;AAAA;AAAA;AAAA;AACJA,UAAAA,QADI,sBACKC,IADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAGIP,OAAO,WAAIO,IAAJ,GAAY;AAClCC,sBAAAA,OAAO,EAAE;AACLC,wBAAAA,MAAM,EAAE;AADH;AADyB,qBAAZ,CAAP,CAIhBC,IAJgB,CAIX,UAAAC,GAAG,EAAI;AACXC,sBAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,GAAnB;AACAA,sBAAAA,GAAG,CAACG,OAAJ;AACAF,sBAAAA,OAAO,CAACC,GAAR;AACAD,sBAAAA,OAAO,CAACC,GAAR,WAAeN,IAAf;AACH,qBATkB,EAShBG,IATgB,CASX,UAAAK,CAAC,EAAI;AACTH,sBAAAA,OAAO,CAACC,GAAR,CAAY,OAAOE,CAAnB;AACH,qBAXkB,WAYR,UAAAC,GAAG;AAAA,6BAAIJ,OAAO,CAACK,KAAR,CAAcD,GAAd,CAAJ;AAAA,qBAZK,CAHJ;;AAAA;AAGTE,oBAAAA,IAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBlB;AAEMC,UAAAA,KAzBY,GAyBJ,uDAzBI;AA0BdC,UAAAA,KA1Bc,GA0BN,CA1BM;AAAA;AAAA,2CA2BCpB,OAAO,CAAC,iDAAD,EAAoD;AAC1EQ,YAAAA,OAAO,EAAE;AACLC,cAAAA,MAAM,EAAE;AADH;AADiE,WAApD,CAAP,CAIhBC,IAJgB,CAIX,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACG,OAAJ,EAAJ;AAAA,WAJQ,WAKR,UAAAE,GAAG;AAAA,mBAAIJ,OAAO,CAACK,KAAR,CAAcD,GAAd,CAAJ;AAAA,WALK,CA3BD;;AAAA;AA2BZE,UAAAA,IA3BY;AAiCZG,UAAAA,KAjCY,GAiCJ,EAjCI;AAAA,iDAkCOH,IAlCP;;AAAA;AAkCZ,gEAAyB;AAAdI,cAAAA,IAAc;AAC7B,kBAAGA,IAAI,CAACC,SAAL,CAAeC,KAAf,IAAwB,uDAA3B,EAEMH,KAAK,CAACI,IAAN,CAAWH,IAAI,CAACI,MAAL,CAAYF,KAAvB,EAHuB,CAIrB;AACH;AAER;AAzCmB;AAAA;AAAA;AAAA;AAAA;;AA0ClBZ,UAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACM,MAAlB;;AACD,eAAQC,CAAR,GAAY,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAyBA,CAAC,EAA1B,EAA+B;AAC3BtB,YAAAA,QAAQ,CAACe,KAAK,CAACO,CAAD,CAAN,CAAR;AACH;;AA7CkB,4CAgDX;AAACR,YAAAA,KAAK,EAALA;AAAD,WAhDW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAsDH,eAAelB,IAAf","sourcesContent":["import React from 'react';\nconst rdfetch = require('@rdfjs/fetch');\nconst Test= props => (\n    <p>Proov</p>\n);\n\n\n\n   Test.getInitialProps = async function getInitialProps (context) {\n       async function getEvent(link)\n       {\n           const list = await rdfetch(`${link}`, {\n               headers: {\n                   accept: 'application/rdf+xml'\n               }\n           }).then(res => {\n               console.log(typeof res);\n               res.dataset();\n               console.log(`sucess`);\n               console.log(`${link}`);\n           }).then(r => {\n               console.log(typeof r);\n           })\n               .catch(err => console.error(err));\n\n      /*     for (const quad of list) {\n               console.log(\"siin\");\n               if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P2_occured_in_the_presence_of\")\n               //console.log(\"subjekt: \" + quad.subject.value + ' predikaat: ' + quad.predicate.value + ' objekt: ' + quad.object.value)\n                   console.log(quad.object.value);\n           }*/\n       };\n\n        const label = 'http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of';\n        let count = 0;\n        const list = await rdfetch('http://www.muis.ee/rdf/objects-by-museum/145873', {\n            headers: {\n                accept: 'application/rdf+xml'\n            }\n        }).then(res => res.dataset())\n            .catch(err => console.error(err));\n        const array = [];\n              for (const quad of list) {\n          if(quad.predicate.value == \"http://www.cidoc-crm.org/cidoc-crm/P46_is_composed_of\")\n\n                array.push(quad.object.value);\n                  //var a = getEvent(quad.object.value);\n               // console.log(a);\n\n      }\n        console.log(array.length);\n       for(let a = 0; a < 100;  a++ ) {\n           getEvent(array[a]);\n       }\n\n\n        return {count};\n    };\n\n\n\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}